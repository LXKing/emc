<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huak.home.dao.thiredpage.ThirdAnalysisDao" >


<select id="getWaterDhDetail" parameterType="java.util.Map" resultType="java.util.Map">

    SELECT
    ROUND((IFNULL(d1.dh,0)),1) DH,
    ROUND((IFNULL(d2.dh,0)),1) DHTQ,
    d1.yeardate TIME
    from (

    SELECT sum(a.dosage)/sum(a.area) dh,
    a.energytype,
    a.yeardate,
    a.total
    from (
    SELECT
    sum(B.area) area,
    sum(B.dosage) dosage,
    SUM(B.total) total,
    B.energytype,
    B.yeardate
    FROM
    ( SELECT vu.UNITID FROM
    ( t_emc_org
    LEFT JOIN v_emc_unit vu ON ID = vu.ORGID
    <if test="feedType!=null and feedType!=''">
        AND vu.heat_type=#{feedType,jdbcType=VARCHAR}
    </if>
    <if test="orgType!=null and orgType!=''">
        AND vu.UNITTYPE = #{orgType,jdbcType=VARCHAR}
    </if>
    )
    WHERE
    FIND_IN_SET(
    ID,
    emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})
    )
    AND P_ORG_ID != '0'
    ) A
    LEFT JOIN (
    SELECT
    h.UNITID AS unitid,
    avg(h.AREA) area,
    sum(h.DOSAGE) AS dosage,
    sum(h.DOSAGE * h.COAL_COEF) AS total,
    et.type AS energytype,
    DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate
    FROM
    (
    ${tableName} h
    LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id
    )
    WHERE
    1 = 1
    <if test="type!=null and type!=''">
        and et.TYPE=#{type,jdbcType=VARCHAR}
    </if>
    AND (
    DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d')
    AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d')
    )
    OR (
    DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= SUBDATE(
    DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d'),
    INTERVAL 1 YEAR
    )
    AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(
    DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d'),
    INTERVAL 1 YEAR
    )
    )
    GROUP BY
    unitid,
    energytype,
    yeardate
    ) B ON A.UNITID = B.unitid
    GROUP BY
    B.energytype,
    B.yeardate
    )a WHERE
    a.yeardate IS NOT NULL
    GROUP BY
    a.energytype,
    a.yeardate
    )d1 LEFT JOIN
    (
    SELECT sum(a.dosage)/sum(a.area) dh,
    a.energytype
    from (
    SELECT
    sum(B.area) area,
    sum(B.dosage) dosage,
    SUM(B.total) total,
    B.energytype,
    B.yeardate
    FROM
    ( SELECT vu.UNITID FROM
    ( t_emc_org
    LEFT JOIN v_emc_unit vu ON ID = vu.ORGID
    <if test="feedType!=null and feedType!=''">
        AND vu.heat_type=#{feedType,jdbcType=VARCHAR}
    </if>
    <if test="orgType!=null and orgType!=''">
        AND vu.UNITTYPE = #{orgType,jdbcType=VARCHAR}
    </if>
    )
    WHERE
    FIND_IN_SET(
    ID,
    emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})
    )
    AND P_ORG_ID != '0'
    ) A
    LEFT JOIN (
    SELECT
    h.UNITID AS unitid,
    avg(h.AREA) area,
    sum(h.DOSAGE) AS dosage,
    sum(h.DOSAGE * h.COAL_COEF) AS total,
    et.type AS energytype,
    DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate
    FROM
    (
    ${tableName} h
    LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id
    )
    WHERE
    1 = 1
    <if test="type!=null and type!=''">
        and et.TYPE=#{type,jdbcType=VARCHAR}
    </if>
    AND (
    DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d')
    AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d')
    )
    OR (
    DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= SUBDATE(
    DATE_FORMAT(#{startTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d'),
    INTERVAL 1 YEAR
    )
    AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(
    DATE_FORMAT(#{endTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d'),
    INTERVAL 1 YEAR
    )
    )
    GROUP BY
    unitid,
    energytype,
    yeardate
    ) B ON A.UNITID = B.unitid
    GROUP BY
    B.energytype,
    B.yeardate
    )a WHERE
    a.yeardate IS NOT NULL
    GROUP BY
    a.energytype,
    a.yeardate
    )d2 on d1.energytype=d2.energytype

</select>
    <select id="getTotalAndTq" parameterType="java.util.Map" resultType="java.util.Map">

        SELECT
        ROUND(IFNULL(sum(d1.dh),0),1) ZDH,
        ROUND(IFNULL(sum(d1.dh)-sum(d2.dh)/sum(d2.dh),0),1) TQ
        from (

        SELECT sum(a.dosage)/sum(a.area) dh,
        a.energytype,
        a.yeardate,
        a.total
        from (
        SELECT
        sum(B.area) area,
        sum(B.dosage) dosage,
        SUM(B.total) total,
        B.energytype,
        B.yeardate
        FROM
        ( SELECT vu.UNITID FROM
        ( t_emc_org
        LEFT JOIN v_emc_unit vu ON ID = vu.ORGID
        <if test="feedType!=null and feedType!=''">
            AND vu.heat_type=#{feedType,jdbcType=VARCHAR}
        </if>
        <if test="orgType!=null and orgType!=''">
            AND vu.UNITTYPE = #{orgType,jdbcType=VARCHAR}
        </if>
        )
        WHERE
        FIND_IN_SET(
        ID,
        emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})
        )
        AND P_ORG_ID != '0'
        ) A
        LEFT JOIN (
        SELECT
        h.UNITID AS unitid,
        avg(h.AREA) area,
        sum(h.DOSAGE) AS dosage,
        sum(h.DOSAGE * h.COAL_COEF) AS total,
        et.type AS energytype,
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate
        FROM
        (
        ${tableName} h
        LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id
        )
        WHERE
        1 = 1
        <if test="type!=null and type!=''">
            and et.TYPE=#{type,jdbcType=VARCHAR}
        </if>
        AND (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d')
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d')
        )
        OR (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= SUBDATE(
        DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(
        DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        )
        GROUP BY
        unitid,
        energytype,
        yeardate
        ) B ON A.UNITID = B.unitid
        GROUP BY
        B.energytype,
        B.yeardate
        )a WHERE
        a.yeardate IS NOT NULL
        GROUP BY
        a.energytype,
        a.yeardate
        )d1 LEFT JOIN
        (
        SELECT sum(a.dosage)/sum(a.area) dh,
        a.energytype
        from (
        SELECT
        sum(B.area) area,
        sum(B.dosage) dosage,
        SUM(B.total) total,
        B.energytype,
        B.yeardate
        FROM
        ( SELECT vu.UNITID FROM
        ( t_emc_org
        LEFT JOIN v_emc_unit vu ON ID = vu.ORGID
        <if test="feedType!=null and feedType!=''">
            AND vu.heat_type=#{feedType,jdbcType=VARCHAR}
        </if>
        <if test="orgType!=null and orgType!=''">
            AND vu.UNITTYPE = #{orgType,jdbcType=VARCHAR}
        </if>
        )
        WHERE
        FIND_IN_SET(
        ID,
        emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})
        )
        AND P_ORG_ID != '0'
        ) A
        LEFT JOIN (
        SELECT
        h.UNITID AS unitid,
        avg(h.AREA) area,
        sum(h.DOSAGE) AS dosage,
        sum(h.DOSAGE * h.COAL_COEF) AS total,
        et.type AS energytype,
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate
        FROM
        (
        ${tableName} h
        LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id
        )
        WHERE
        1 = 1
        <if test="type!=null and type!=''">
            and et.TYPE=#{type,jdbcType=VARCHAR}
        </if>
        AND (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d')
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d')
        )
        OR (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= SUBDATE(
        DATE_FORMAT(#{startTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(
        DATE_FORMAT(#{endTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        )
        GROUP BY
        unitid,
        energytype,
        yeardate
        ) B ON A.UNITID = B.unitid
        GROUP BY
        B.energytype,
        B.yeardate
        )a WHERE
        a.yeardate IS NOT NULL
        GROUP BY
        a.energytype,
        a.yeardate
        )d2 on d1.energytype=d2.energytype

    </select>
    <select id="getWaterDhOrg" parameterType="java.util.Map" resultType="java.util.Map">

        SELECT
        ROUND((IFNULL(d1.waterEnergyY,0)),1) newYwater,
        ROUND((IFNULL(d1.waterEnergyW,0)),1) newWwater,
        ROUND((IFNULL(d1.waterEnergyZ,0)),1) newZwater,
        ROUND((IFNULL(d1.waterEnergyX,0)),1) newXwater,
        ROUND((IFNULL(d1.waterEnergyH,0)),1) newHwater,
        ROUND((IFNULL(d2.waterEnergyY,0)),1) oldYwater,
        ROUND((IFNULL(d2.waterEnergyW,0)),1) oldWwater,
        ROUND((IFNULL(d2.waterEnergyZ,0)),1) oldZwater,
        ROUND((IFNULL(d2.waterEnergyX,0)),1) oldXwater,
        ROUND((IFNULL(d2.waterEnergyH,0)),1) oldHwater,
        d1.yeardate TIME
        from (

        SELECT
        SUM( CASE a.UNITTYPE WHEN '1' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyY,
        SUM( CASE a.UNITTYPE WHEN '2' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyW,
        SUM( CASE a.UNITTYPE WHEN '3' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyZ,
        SUM( CASE a.UNITTYPE WHEN '4' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyX,
        SUM( CASE a.UNITTYPE WHEN '5' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyH,
        sum(a.dosage)/sum(a.area) dh,
        a.energytype,
        a.yeardate,
        a.total
        from (
        SELECT
        sum(B.area) area,
        sum(B.dosage) dosage,
        SUM(B.total) total,
        B.energytype,
        a.UNITTYPE,
        B.yeardate
        FROM
        ( SELECT vu.UNITID,vu.UNITTYPE FROM
        ( t_emc_org
        LEFT JOIN v_emc_unit vu ON ID = vu.ORGID
        <if test="feedType!=null and feedType!=''">
            AND vu.heat_type=#{feedType,jdbcType=VARCHAR}
        </if>
        <if test="orgType!=null and orgType!=''">
            AND vu.UNITTYPE = #{orgType,jdbcType=VARCHAR}
        </if>
        )
        WHERE
        FIND_IN_SET(
        ID,
        emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})
        )
        AND P_ORG_ID != '0'
        ) A
        LEFT JOIN (
        SELECT
        h.UNITID AS unitid,
        avg(h.AREA) area,
        sum(h.DOSAGE) AS dosage,
        sum(h.DOSAGE * h.COAL_COEF) AS total,
        et.type AS energytype,
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate
        FROM
        (
        ${tableName} h
        LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id
        )
        WHERE
        1 = 1
        <if test="type!=null and type!=''">
            and et.TYPE=#{type,jdbcType=VARCHAR}
        </if>
        AND (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d')
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d')
        )
        OR (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= SUBDATE(
        DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(
        DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        )
        GROUP BY
        unitid,
        energytype,
        yeardate
        ) B ON A.UNITID = B.unitid
        GROUP BY
        B.energytype,
        B.yeardate
        )a WHERE
        a.yeardate IS NOT NULL
        GROUP BY
        a.energytype,
        a.yeardate
        )d1 LEFT JOIN
        (
        SELECT
        SUM( CASE a.UNITTYPE WHEN '1' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyY,
        SUM( CASE a.UNITTYPE WHEN '2' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyW,
        SUM( CASE a.UNITTYPE WHEN '3' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyZ,
        SUM( CASE a.UNITTYPE WHEN '4' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyX,
        SUM( CASE a.UNITTYPE WHEN '5' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyH,
        sum(a.dosage)/sum(a.area) dh,
        a.energytype,
        a.yeardate,
        a.total
        from (
        SELECT
        sum(B.area) area,
        sum(B.dosage) dosage,
        SUM(B.total) total,
        B.energytype,
        a.UNITTYPE,
        B.yeardate
        FROM
        ( SELECT vu.UNITID,vu.UNITTYPE FROM
        ( t_emc_org
        LEFT JOIN v_emc_unit vu ON ID = vu.ORGID
        <if test="feedType!=null and feedType!=''">
            AND vu.heat_type=#{feedType,jdbcType=VARCHAR}
        </if>
        <if test="orgType!=null and orgType!=''">
            AND vu.UNITTYPE = #{orgType,jdbcType=VARCHAR}
        </if>
        )
        WHERE
        FIND_IN_SET(
        ID,
        emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})
        )
        AND P_ORG_ID != '0'
        ) A
        LEFT JOIN (
        SELECT
        h.UNITID AS unitid,

        avg(h.AREA) area,
        sum(h.DOSAGE) AS dosage,
        sum(h.DOSAGE * h.COAL_COEF) AS total,
        et.type AS energytype,
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate
        FROM
        (
        ${tableName} h
        LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id
        )
        WHERE
        1 = 1
        <if test="type!=null and type!=''">
            and et.TYPE=#{type,jdbcType=VARCHAR}
        </if>
        AND (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d')
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d')
        )
        OR (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= SUBDATE(
        DATE_FORMAT(#{startTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(
        DATE_FORMAT(#{endTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        )
        GROUP BY
        unitid,
        energytype,
        yeardate
        ) B ON A.UNITID = B.unitid
        GROUP BY
        B.energytype,
        B.yeardate
        )a WHERE
        a.yeardate IS NOT NULL
        GROUP BY
        a.energytype,
        a.yeardate
        )d2 on d1.energytype=d2.energytype

    </select>

    <select id="getTotalOrgAndTq" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        ROUND(IFNULL(sum(d1.waterEnergyY),0),1) YTotal,
        ROUND(IFNULL(sum(d1.waterEnergyW),0),1) WTotal,
        ROUND(IFNULL(sum(d1.waterEnergyZ),0),1) ZTotal,
        ROUND(IFNULL(sum(d1.waterEnergyX),0),1) XTotal,
        ROUND(IFNULL(sum(d1.waterEnergyH),0),1) HTotal,
        ROUND(IFNULL(sum(d1.waterEnergyY)-sum(d2.waterEnergyY)/sum(d2.waterEnergyY),0),1)YTB,
        ROUND(IFNULL(sum(d1.waterEnergyW)-sum(d2.waterEnergyW)/sum(d2.waterEnergyW),0),1)WTB,
        ROUND(IFNULL(sum(d1.waterEnergyZ)-sum(d2.waterEnergyZ)/sum(d2.waterEnergyZ),0),1)ZTB,
        ROUND(IFNULL(sum(d1.waterEnergyX)-sum(d2.waterEnergyX)/sum(d2.waterEnergyX),0),1)XTB,
        ROUND(IFNULL(sum(d1.waterEnergyH)-sum(d2.waterEnergyH)/sum(d2.waterEnergyH),0),1)HTB
        from (

        SELECT
        SUM( CASE a.UNITTYPE WHEN '1' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyY,
        SUM( CASE a.UNITTYPE WHEN '2' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyW,
        SUM( CASE a.UNITTYPE WHEN '3' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyZ,
        SUM( CASE a.UNITTYPE WHEN '4' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyX,
        SUM( CASE a.UNITTYPE WHEN '5' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyH,
        sum(a.dosage)/sum(a.area) dh,
        a.energytype,
        a.yeardate,
        a.total
        from (
        SELECT
        sum(B.area) area,
        sum(B.dosage) dosage,
        SUM(B.total) total,
        B.energytype,
        a.UNITTYPE,
        B.yeardate
        FROM
        ( SELECT vu.UNITID,vu.UNITTYPE FROM
        ( t_emc_org
        LEFT JOIN v_emc_unit vu ON ID = vu.ORGID
        <if test="feedType!=null and feedType!=''">
            AND vu.heat_type=#{feedType,jdbcType=VARCHAR}
        </if>
        <if test="orgType!=null and orgType!=''">
            AND vu.UNITTYPE = #{orgType,jdbcType=VARCHAR}
        </if>
        )
        WHERE
        FIND_IN_SET(
        ID,
        emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})
        )
        AND P_ORG_ID != '0'
        ) A
        LEFT JOIN (
        SELECT
        h.UNITID AS unitid,
        avg(h.AREA) area,
        sum(h.DOSAGE) AS dosage,
        sum(h.DOSAGE * h.COAL_COEF) AS total,
        et.type AS energytype,
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate
        FROM
        (
        ${tableName} h
        LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id
        )
        WHERE
        1 = 1
        <if test="type!=null and type!=''">
            and et.TYPE=#{type,jdbcType=VARCHAR}
        </if>
        AND (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d')
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d')
        )
        OR (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= SUBDATE(
        DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(
        DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        )
        GROUP BY
        unitid,
        energytype,
        yeardate
        ) B ON A.UNITID = B.unitid
        GROUP BY
        B.energytype,
        B.yeardate
        )a WHERE
        a.yeardate IS NOT NULL
        GROUP BY
        a.energytype,
        a.yeardate
        )d1 LEFT JOIN
        (
        SELECT
        SUM( CASE a.UNITTYPE WHEN '1' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyY,
        SUM( CASE a.UNITTYPE WHEN '2' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyW,
        SUM( CASE a.UNITTYPE WHEN '3' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyZ,
        SUM( CASE a.UNITTYPE WHEN '4' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyX,
        SUM( CASE a.UNITTYPE WHEN '5' THEN a.dosage / a.area ELSE 0 END ) AS waterEnergyH,
        sum(a.dosage)/sum(a.area) dh,
        a.energytype,
        a.yeardate,
        a.total
        from (
        SELECT
        sum(B.area) area,
        sum(B.dosage) dosage,
        SUM(B.total) total,
        B.energytype,
        a.UNITTYPE,
        B.yeardate
        FROM
        ( SELECT vu.UNITID,vu.UNITTYPE FROM
        ( t_emc_org
        LEFT JOIN v_emc_unit vu ON ID = vu.ORGID
        <if test="feedType!=null and feedType!=''">
            AND vu.heat_type=#{feedType,jdbcType=VARCHAR}
        </if>
        <if test="orgType!=null and orgType!=''">
            AND vu.UNITTYPE = #{orgType,jdbcType=VARCHAR}
        </if>
        )
        WHERE
        FIND_IN_SET(
        ID,
        emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})
        )
        AND P_ORG_ID != '0'
        ) A
        LEFT JOIN (
        SELECT
        h.UNITID AS unitid,

        avg(h.AREA) area,
        sum(h.DOSAGE) AS dosage,
        sum(h.DOSAGE * h.COAL_COEF) AS total,
        et.type AS energytype,
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate
        FROM
        (
        ${tableName} h
        LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id
        )
        WHERE
        1 = 1
        <if test="type!=null and type!=''">
            and et.TYPE=#{type,jdbcType=VARCHAR}
        </if>
        AND (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d')
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d')
        )
        OR (
        DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &gt;= SUBDATE(
        DATE_FORMAT(#{startTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(
        DATE_FORMAT(#{endTimeTq,jdbcType=VARCHAR}, '%Y-%m-%d'),
        INTERVAL 1 YEAR
        )
        )
        GROUP BY
        unitid,
        energytype,
        yeardate
        ) B ON A.UNITID = B.unitid
        GROUP BY
        B.energytype,
        B.yeardate
        )a WHERE
        a.yeardate IS NOT NULL
        GROUP BY
        a.energytype,
        a.yeardate
        )d2 on d1.energytype=d2.energytype

    </select>

    <select id="getFeedDh" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT v.UNITID ID,v.UNITNAME NAME,
        ROUND(IFNULL(SUM(CASE v.TYPE WHEN '4' THEN 0 ELSE v.BQBM END)/AVG(v.BQAREA),0),2) VALUE
        FROM
        (
        SELECT f.UNITID,f.UNITNAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT vu.UNITID,vu.UNITNAME,vu.UNITTYPE,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,d1.TYPE FROM
        (SELECT v.UNITTYPE,v.UNITID,v.UNITNAME from (SELECT ID FROM
        t_emc_org o WHERE FIND_IN_SET( ID, emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})) and o.COM_ID=#{comId,jdbcType=VARCHAR}) m,v_emc_unit v

        WHERE m.ID=v.ORGID
        <if test="feedType!=null and feedType!=''">
            AND v.heat_type=#{feedType,jdbcType=VARCHAR}
        </if>
        AND v.UNITTYPE ='1'
        GROUP BY v.UNITID,v.UNITTYPE)vu

        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,
                     SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,eet.TYPE FROM ${tableName} fdh
        LEFT JOIN t_emc_energy_type eet ON eet.ID = fdh.TYPEID
        WHERE
        fdh.DOSAGE_TIME &gt;= #{startTime,jdbcType=VARCHAR}
        AND fdh.DOSAGE_TIME &lt;= #{endTime,jdbcType=VARCHAR}
        and eet.TYPE='1'
        GROUP BY fdh.UNITID,eet.TYPE) d1 ON d1.UNITID = vu.unitid
        GROUP BY vu.UNITID,vu.UNITNAME,d1.TYPE) f
        GROUP BY f.UNITID,f.UNITNAME,f.TYPE
        ) v
        GROUP BY v.UNITID,v.UNITNAME
        ORDER BY ROUND(IFNULL(SUM(CASE v.TYPE WHEN '4' THEN 0 ELSE v.BQBM END)/AVG(v.BQAREA),0),2) DESC
    </select>
    <select id="getStationDh" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT v.UNITID ID,v.UNITNAME NAME,
        ROUND(IFNULL(SUM(CASE v.TYPE WHEN '4' THEN 0 ELSE v.BQBM END)/AVG(v.BQAREA),0),2) VALUE
        FROM
        (
        SELECT f.UNITID,f.UNITNAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT vu.UNITID,vu.UNITNAME,vu.UNITTYPE,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,d1.TYPE FROM
        (SELECT v.UNITTYPE,v.UNITID,v.UNITNAME from (SELECT ID FROM
        t_emc_org o WHERE FIND_IN_SET( ID, emc_func_org_getchilds (#{orgId,jdbcType=VARCHAR})) and o.COM_ID=#{comId,jdbcType=VARCHAR}) m,v_emc_unit v

        WHERE m.ID=v.ORGID
        <if test="feedType!=null and feedType!=''">
            AND v.heat_type=#{feedType,jdbcType=VARCHAR}
        </if>
        AND v.UNITTYPE ='3'
        GROUP BY v.UNITID,v.UNITTYPE)vu

        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,
        SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,eet.TYPE FROM ${tableName} fdh
        LEFT JOIN t_emc_energy_type eet ON eet.ID = fdh.TYPEID
        WHERE
        fdh.DOSAGE_TIME &gt;= #{startTime,jdbcType=VARCHAR}
        AND fdh.DOSAGE_TIME &lt;= #{endTime,jdbcType=VARCHAR}
        and eet.TYPE='1'
        GROUP BY fdh.UNITID,eet.TYPE) d1 ON d1.UNITID = vu.unitid
        GROUP BY vu.UNITID,vu.UNITNAME,d1.TYPE) f
        GROUP BY f.UNITID,f.UNITNAME,f.TYPE
        ) v
        GROUP BY v.UNITID,v.UNITNAME
        ORDER BY ROUND(IFNULL(SUM(CASE v.TYPE WHEN '4' THEN 0 ELSE v.BQBM END)/AVG(v.BQAREA),0),2) DESC
    </select>

    <select id="getTables" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        ve.UNITNAME as unitName,
        ve.UNITTYPE as unitType,
        <foreach collection="currentYear" index="index" item="tag" open=""  separator="," close="">
            ROUND(MAX((CASE d.DOSAGE_TIME WHEN #{tag} THEN d.DOSAGE/d.area ELSE 0 END)),2) c${index}
        </foreach>
        ,
        <foreach collection="lastYear" index="i" item="val" open=""  separator="," close="">
            ROUND(MAX((CASE d.DOSAGE_TIME WHEN #{val} THEN d.DOSAGE/d.area ELSE 0 END)),2) l${i}
        </foreach>
        ,
        <foreach collection="currentYear" index="i" item="val" open=""  separator="," close="">
            0 p${i}
        </foreach>
        FROM (
        SELECT fdh.UNITID,avg(fdh.AREA) area,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,DATE_FORMAT(DOSAGE_TIME,'%Y-%m-%d') DOSAGE_TIME
        FROM t_emc_final_data_hour_tj fdh,t_emc_energy_type eet  WHERE fdh.TYPEID = eet.ID
        <if test="comId != null and comId !=''">
            AND fdh.COMID= #{comId}
        </if>
        <if test="energytype != null and energytype !=''">
            and eet.TYPE = #{type,jdbcType=VARCHAR}
        </if>

        <if test="startTime!=null and startTime!=''">
            and fdh.DOSAGE_TIME <![CDATA[>=]]> #{startTime,jdbcType=VARCHAR}
        </if>
        <if test="endTime!=null and endTime!=''">
            and fdh.DOSAGE_TIME <![CDATA[<=]]> #{endTime,jdbcType=VARCHAR}
        </if>
        GROUP BY fdh.UNITID,DATE_FORMAT(DOSAGE_TIME,'%Y-%m-%d')
        union all
        (
        SELECT fdh.UNITID,avg(fdh.AREA) area,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,DATE_FORMAT(DOSAGE_TIME,'%Y-%m-%d') DOSAGE_TIME
        FROM t_emc_final_data_hour_tj fdh,t_emc_energy_type eet  WHERE fdh.TYPEID = eet.ID
        <if test="comId != null and comId !=''">
            AND fdh.COMID= #{comId}
        </if>
        <if test="energytype != null and energytype !=''">
            and eet.TYPE = #{type,jdbcType=VARCHAR}
        </if>

        <if test="startTime!=null and startTime!=''">
            and fdh.DOSAGE_TIME <![CDATA[>=]]> #{startTimeTq,jdbcType=VARCHAR}
        </if>
        <if test="endTime!=null and endTime!=''">
            and fdh.DOSAGE_TIME <![CDATA[<=]]> #{endTimeTq,jdbcType=VARCHAR}
        </if>
        GROUP BY fdh.UNITID,DATE_FORMAT(DOSAGE_TIME,'%Y-%m-%d')
        )

        ) d , (select UNITID,UNITTYPE,COMID,UNITNAME from v_emc_unit where 1=1
        <if test="comId != null and comId !=''">
            AND COMID= #{comId}
        </if>
        <if test="orgId != null and orgId != ''">
            and EXISTS (select id from t_emc_org where
            FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})) and id = ORGID)
        </if>
        )  ve where d.UNITID = ve.UNITID  GROUP BY d.UNITID

    </select>

    <select id="getTotal" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        (CASE WHEN M.UNITTYPE = '1' THEN '源'
        WHEN M.UNITTYPE = '2' THEN '网'
        WHEN M.UNITTYPE = '3' THEN '站'
        WHEN M.UNITTYPE = '4' THEN '线'
        WHEN M.UNITTYPE = '5' THEN '户' else '' end) as unitName,
        M.UNITTYPE as unitType,
        <foreach collection="currentYear" index="index" item="tag" open=""  separator="," close="">
            ROUND(MAX((CASE M.DOSAGE_TIME WHEN #{tag} THEN M.DOSAGE/M.area ELSE 0 END)),2) c${index}
        </foreach>
        ,
        <foreach collection="lastYear" index="i" item="val" open=""  separator="," close="">
            ROUND(MAX((CASE M.DOSAGE_TIME WHEN #{val} THEN M.DOSAGE/M.area ELSE 0 END)),2) l${i}
        </foreach>
        ,
        <foreach collection="lastYear" index="i" item="val" open=""  separator="," close="">
            0 p${i}
        </foreach>
        FROM (SELECT
        ev.UNITTYPE,
        SUM(fdh.DOSAGE) DOSAGE,
        avg(fdh.area) area,
        SUM(fdh.DOSAGE * fdh.COAL_COEF) BM,
        DATE_FORMAT(DOSAGE_TIME, '%Y-%m-%d') DOSAGE_TIME
        FROM
        t_emc_final_data_hour_tj   fdh,
        t_emc_energy_type eet,
        (select UNITID,UNITTYPE,COMID from v_emc_unit where 1=1
        <if test="orgId != null and orgId != ''">
            and EXISTS (select id from t_emc_org where
            FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})) and id = ORGID)
        </if>
        ) ev
        WHERE
        fdh.TYPEID = eet.ID
        and fdh.UNITID = ev.UNITID
        and fdh.COMID = ev.COMID
        <if test="comId != null and comId !=''">
            AND fdh.COMID= #{comId}
        </if>
        <if test="energytype != null and energytype !=''">
            and eet.TYPE = #{type,jdbcType=VARCHAR}
        </if>

        <if test="startTime!=null and startTime!=''">
            and fdh.DOSAGE_TIME <![CDATA[>=]]> #{startTime,jdbcType=VARCHAR}
        </if>
        <if test="endTime!=null and endTime!=''">
            and fdh.DOSAGE_TIME <![CDATA[<=]]> #{endTime,jdbcType=VARCHAR}
        </if>
        GROUP BY
        ev.UNITTYPE,
        DATE_FORMAT(DOSAGE_TIME, '%Y-%m-%d')

        UNION ALL
        (SELECT
        ev.UNITTYPE,
        avg(fdh.area) area,
        SUM(fdh.DOSAGE) DOSAGE,
        SUM(fdh.DOSAGE * fdh.COAL_COEF) BM,
        DATE_FORMAT(DOSAGE_TIME, '%Y-%m-%d') DOSAGE_TIME
        FROM
        t_emc_final_data_hour_tj   fdh,
        t_emc_energy_type eet,
        (select UNITID,UNITTYPE,COMID from v_emc_unit where 1=1
        <if test="orgId != null and orgId != ''">
            and EXISTS (select id from t_emc_org where
            FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})) and id = ORGID)
        </if>
        ) ev
        WHERE
        fdh.TYPEID = eet.ID
        and fdh.UNITID = ev.UNITID
        and fdh.COMID = ev.COMID
        <if test="comId != null and comId !=''">
            AND fdh.COMID= #{comId}
        </if>
        <if test="energytype != null and energytype !=''">
            and eet.TYPE = #{type,jdbcType=VARCHAR}
        </if>

        <if test="startTimeTq!=null and startTimeTq!=''">
            and fdh.DOSAGE_TIME <![CDATA[>=]]> #{startTimeTq,jdbcType=VARCHAR}
        </if>
        <if test="endTimeTq!=null and endTimeTq!=''">
            and fdh.DOSAGE_TIME <![CDATA[<=]]> #{endTimeTq,jdbcType=VARCHAR}
        </if>
        GROUP BY
        ev.UNITTYPE,
        DATE_FORMAT(DOSAGE_TIME, '%Y-%m-%d')))M

        group by M.UNITTYPE

    </select>
</mapper>