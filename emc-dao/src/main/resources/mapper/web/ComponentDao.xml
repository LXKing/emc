<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huak.home.dao.component.ComponentDao" >

    <!--组件-能耗明细-->
  <select id="energyDetail" resultType="java.util.Map" parameterType="java.util.Map" >
      SELECT
      max(case when mm.type ='qn' then mm.bm_electric else 0 end)as qn_bm_electric,
      max(case when mm.type ='qn' then mm.bm_whater else 0 end) as qn_bm_whater,
      max(case when mm.type ='qn' then mm.bm_heat else 0 end) as qn_bm_heat,
      max(case when mm.type ='qn' then mm.bm_gas else 0 end) as qn_bm_gas,
      max(case when mm.type ='qn' then  mm.bm_coal else 0 end) as qn_bm_coal,
      max(case when mm.type ='qn' then mm.bm_solar  else 0 end) as qn_bm_solar,
      max(case when mm.type ='qn' then mm.electric else 0 end)as qn_electric,
      max(case when mm.type ='qn' then mm.whater else 0 end) as qn_whater,
      max(case when mm.type ='qn' then mm.heat else 0 end) as qn_heat,
      max(case when mm.type ='qn' then mm.gas else 0 end) as qn_gas,
      max(case when mm.type ='qn' then  mm.coal else 0 end) as qn_coal,
      max(case when mm.type ='qn' then mm.solar  else 0 end) as qn_solar,

      (max(case when mm.type ='qn' then mm.bm_electric else 0 end)+
      max(case when mm.type ='qn' then mm.bm_whater else 0 end) +
      max(case when mm.type ='qn' then mm.bm_gas else 0 end) +
      max(case when mm.type ='qn' then  mm.bm_coal else 0 end) +
      max(case when mm.type ='qn' then mm.bm_solar  else 0 end))qn_bm_total,



      max(case when mm.type ='jn' then mm.bm_electric else 0 end)as bm_electric,
      max(case when mm.type ='jn' then mm.bm_whater else 0 end) as bm_whater,
      max(case when mm.type ='jn' then mm.bm_heat else 0 end) as bm_heat,
      max(case when mm.type ='jn' then mm.bm_gas else 0 end) as bm_gas,
      max(case when mm.type ='jn' then  mm.bm_coal else 0 end) as bm_coal,
      max(case when mm.type ='jn' then mm.bm_solar  else 0 end) as bm_solar,
      max(case when mm.type ='jn' then mm.electric else 0 end)as electric,
      max(case when mm.type ='jn' then mm.whater else 0 end) as whater,
      max(case when mm.type ='jn' then mm.heat else 0 end) as heat,
      max(case when mm.type ='jn' then mm.gas else 0 end) as gas,
      max(case when mm.type ='jn' then  mm.coal else 0 end) as coal,
      max(case when mm.type ='jn' then mm.solar  else 0 end) as solar,

      (max(case when mm.type ='jn' then mm.bm_electric else 0 end)+
      max(case when mm.type ='jn' then mm.bm_whater else 0 end) +
      max(case when mm.type ='jn' then mm.bm_gas else 0 end) +
      max(case when mm.type ='jn' then  mm.bm_coal else 0 end) +
      max(case when mm.type ='jn' then mm.bm_solar  else 0 end) )bm_total


      from
      (select 'jn' as type, max(case when b.tt ='1' then b.dnum else 0 end)as  bm_whater,
      max(case when b.tt ='2' then b.dnum else 0 end) as bm_electric,
      max(case when b.tt ='3' then b.dnum else 0 end) as  bm_gas,
      max(case when b.tt ='4' then b.dnum else 0 end) as bm_heat,
      max(case when b.tt ='5' then b.dnum else 0 end) as bm_coal,
      max(case when b.tt ='6' then b.dnum else 0 end) as bm_solar,
      max(case when b.tt ='1' then b.num else 0 end)as  whater,
      max(case when b.tt ='2' then b.num else 0 end) as electric,
      max(case when b.tt ='3' then b.num else 0 end) as  gas,
      max(case when b.tt ='4' then b.num else 0 end) as heat,
      max(case when b.tt ='5' then b.num else 0 end) as coal,
      max(case when b.tt ='6' then b.num else 0 end) as solar
      from (SELECT ww.TYPE as tt, SUM(QQ.num) as dnum,sum(QQ.nums) as num
      from (SELECT
      da.typeid AS type,
      da.DOSAGE_TIME as time,
      da.UNITID as unit,
      sum(da.DOSAGE*da.COAL_COEF) AS num,
      sum(da.DOSAGE) as nums
      FROM
      t_emc_final_data_hour da,( select unitid from v_emc_unit where 1=1
      <if test="feedType != null and feedType !=''">
          and  HEAT_TYPE = #{feedType}
      </if>
      <if test="orgId != null and orgId !=''">
          and  ORGID in (SELECT id FROM t_emc_org where FIND_IN_SET( id,emc_func_org_getchilds (#{orgId})))
      </if>
      <if test="comId != null and comId !=''">
          and  COMID  = #{comId}
      </if>
      <if test="type != null and type !=''">
          and  UNITTYPE  = #{type}
      </if>
      group by unitid
      ) oo where da.unitid = oo.unitid
      <if test="startTime != null ">
          and  da.DOSAGE_TIME <![CDATA[ >= ]]> #{startTime}
      </if>
      <if test="endTime != null ">
          and  da.DOSAGE_TIME  <![CDATA[ <= ]]> #{endTime}
      </if>
      GROUP BY
      da.typeid,da.DOSAGE_TIME,da.UNITID)QQ ,t_emc_energy_type ww  where QQ.type = ww.ID group by ww.TYPE)b
      union ALL
      (
      select 'qn' as type, max(case when b.tt ='1' then b.dnum else 0 end)as  qn_bm_whater,
      max(case when b.tt ='2' then b.dnum else 0 end) as qn_bm_electric,
      max(case when b.tt ='3' then b.dnum else 0 end) as  qn_bm_gas,
      max(case when b.tt ='4' then b.dnum else 0 end) as qn_bm_heat,
      max(case when b.tt ='5' then b.dnum else 0 end) as qn_bm_coal,
      max(case when b.tt ='6' then b.dnum else 0 end) as qn_bm_solar,
      max(case when b.tt ='1' then b.num else 0 end)as  qn_whater,
      max(case when b.tt ='2' then b.num else 0 end) as qn_electric,
      max(case when b.tt ='3' then b.num else 0 end) as  qn_gas,
      max(case when b.tt ='4' then b.num else 0 end) as qn_heat,
      max(case when b.tt ='5' then b.num else 0 end) as qn_coal,
      max(case when b.tt ='6' then b.num else 0 end) as qn_solar
      from (SELECT ww.TYPE as tt, SUM(QQ.num) as dnum,sum(QQ.nums) as num
      from (SELECT
      da.typeid AS type,
      da.DOSAGE_TIME as time,
      da.UNITID as unit,
      sum(da.DOSAGE*da.COAL_COEF) AS num,
      sum(da.DOSAGE) as nums
      FROM
      t_emc_final_data_hour da,(
          select unitid from v_emc_unit where 1=1
          <if test="feedType != null and feedType !=''">
             and  HEAT_TYPE = #{feedType}
          </if>
          <if test="orgId != null and orgId !=''">
              and  ORGID in (SELECT id FROM t_emc_org where FIND_IN_SET( id,emc_func_org_getchilds (#{orgId})))
          </if>
          <if test="comId != null and comId !=''">
              and  COMID  = #{comId}
          </if>
          <if test="type != null and type !=''">
              and  UNITTYPE  = #{type}
          </if>
          group by unitid
      ) oo where da.unitid = oo.unitid

      <if test="pstartTime != null ">
          and  da.DOSAGE_TIME <![CDATA[ >= ]]> #{pstartTime}
      </if>
      <if test="pendTime != null ">
          and  da.DOSAGE_TIME  <![CDATA[ <= ]]> #{pendTime}
      </if>
      GROUP BY
      da.typeid,da.DOSAGE_TIME,da.UNITID)QQ ,t_emc_energy_type ww  where QQ.type = ww.ID group by ww.TYPE)b
      ))mm
  </select>

<!--组件-费用明细-->
  <select id="costDetail" resultType="java.util.Map" parameterType="java.util.Map">
      SELECT
      mm.ccs,
      (CASE WHEN mm.ccs>mm.qn_ccs THEN 'true' WHEN mm.ccs = mm.qn_ccs THEN 'null' else 'false' end) flag_ccs,
      mm.device,
      (CASE WHEN mm.device>mm.qn_device THEN 'true' WHEN mm.device = mm.qn_device THEN 'null' else 'false' end) flag_device,
      mm.labor,
      (CASE WHEN mm.labor>mm.qn_labor THEN 'true' WHEN mm.labor = mm.qn_labor THEN 'null' else 'false' end) flag_labor,
      mm.manage,
      (CASE WHEN mm.manage>mm.qn_manage THEN 'true' WHEN mm.manage = mm.qn_manage THEN 'null' else 'false' end) flag_manage,
      mm.other,
      (CASE WHEN mm.other>mm.qn_other THEN 'true' WHEN mm.other = mm.qn_other THEN 'null' else 'false' end) flag_other,

      (CASE WHEN (mm.ccs+
      mm.device+
      mm.labor+
      mm.manage+
      mm.other)>(mm.qn_ccs+
      mm.qn_device+
      mm.qn_labor+
      mm.qn_manage+
      mm.qn_other) THEN 'true' WHEN (mm.ccs+
      mm.device+
      mm.labor+
      mm.manage+
      mm.other)=(mm.qn_ccs+
      mm.qn_device+
      mm.qn_labor+
      mm.qn_manage+
      mm.qn_other) THEN 'null' else 'false' end) flag_total,
      mm.qn_ccs,
      mm.qn_device,
      mm.qn_labor,
      mm.qn_manage,
      mm.qn_other,
      (mm.ccs+
      mm.device+
      mm.labor+
      mm.manage+
      mm.other)total_sum,
      (mm.qn_ccs+
      mm.qn_device+
      mm.qn_labor+
      mm.qn_manage+
      mm.qn_other)qn_total_sum,
      (CASE WHEN mm.qn_ccs = 0 THEN '#%' ELSE concat(FORMAT((mm.ccs-mm.qn_ccs)/mm.qn_ccs*100,2),'%') end) tb_css,
      (CASE WHEN mm.qn_device = 0 THEN '#%' ELSE concat(FORMAT((mm.device-mm.qn_device)/mm.qn_device*100,2),'%') end) tb_device,
      (CASE WHEN mm.qn_labor = 0 THEN '#%' ELSE concat(FORMAT((mm.labor-mm.qn_labor)/mm.qn_labor*100,2),'%') end) tb_labor,
      (CASE WHEN mm.qn_manage = 0 THEN '#%' ELSE concat(FORMAT((mm.manage-mm.qn_manage)/mm.qn_manage*100,2),'%') end) tb_manage,
      (CASE WHEN mm.qn_other = 0 THEN '#%' ELSE concat(FORMAT((mm.other-mm.qn_other)/mm.qn_other*100,2),'%') end) tb_other,
      (CASE WHEN (mm.qn_ccs+
      mm.qn_device+
      mm.qn_labor+
      mm.qn_manage+
      mm.qn_other) = 0 THEN '#%' ELSE concat(FORMAT(((mm.ccs+
      mm.device+
      mm.labor+
      mm.manage+
      mm.other)- (mm.qn_ccs+
      mm.qn_device+
      mm.qn_labor+
      mm.qn_manage+
      mm.qn_other))/ (mm.qn_ccs+
      mm.qn_device+
      mm.qn_labor+
      mm.qn_manage+
      mm.qn_other)*100,2),'%') end) tb_total
      FROM
      (
      SELECT
      max(case when type = 'jn' then manage else 0 end)manage,
      max(case when type = 'jn' then other else 0 end) other,
      max(case when type = 'jn' then device else 0 end) device,
      max(case when type = 'jn' then labor else 0 end) labor,
      max(case when type = 'jn' then ccs else 0 end)ccs,
      max(case when type = 'qn' then manage else 0 end)qn_manage,
      max(case when type = 'qn' then other else 0 end) qn_other,
      max(case when type = 'qn' then device else 0 end) qn_device,
      max(case when type = 'qn' then labor else 0 end) qn_labor,
      max(case when type = 'qn' then ccs else 0 end) qn_ccs
      from
      (select 'jn' type,
      max(case when cc.TYPEID = '1' then cc.cost else 0 end) manage,
      max(case when cc.TYPEID = '2' then cc.cost else 0 end) other,
      max(case when cc.TYPEID = '3' then cc.cost else 0 end) device,
      max(case when cc.TYPEID = '4' then cc.cost else 0 end) labor,
      (select sum(bb.ne) from (SELECT a.typeid,sum(a.DOSAGE*a.PRICE) ne
      FROM t_emc_final_data_hour a,
      (select UNITID from v_emc_unit  where 1=1
      <if test="orgId != null and orgId != ''">
          and  ORGID in (select id from t_emc_org where
          FIND_IN_SET(id,emc_func_org_getchilds(#{orgId}))  )
      </if>
      <if test="feedType != null and feedType != ''">
          and HEAT_TYPE = #{feedType}
      </if>
      <if test="type != null and type !=''">
          and  UNITTYPE  = #{type}
      </if>
      group by UNITID) c
      WHERE a.UNITID = c.unitid
      <if test="startTime != null and startTime !=''">
          and   a.DOSAGE_TIME <![CDATA[ >= ]]> #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
          and   a.DOSAGE_TIME <![CDATA[ <= ]]> #{endTime}
      </if>

      GROUP BY TYPEID)bb)ccs
      from (SELECT b.TYPEID,sum(b.COST) cost FROM t_emc_final_cost_day b,
      (select * from v_emc_unit  where 1=1
      <if test="orgId != null and orgId != ''">
          and  ORGID in (select id from t_emc_org where FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})))
      </if>
      <if test="feedType != null and feedType != ''">
          and HEAT_TYPE = #{feedType}
      </if>
      <if test="type != null and type !=''">
          and  UNITTYPE  = #{type}
      </if>
      GROUP BY UNITID )c
      where  b.UNITID = c.unitid
      <if test="startTime != null and startTime !=''">
          and   b.cost_date <![CDATA[ >= ]]> #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
          and    b.cost_date <![CDATA[ <= ]]> #{endTime}
      </if>

      GROUP BY b.TYPEID) cc
      union
      select 'qn' type,
      max(case when cc.TYPEID = '1' then cc.cost else 0 end) manage,
      max(case when cc.TYPEID = '2' then cc.cost else 0 end) other,
      max(case when cc.TYPEID = '3' then cc.cost else 0 end) device,
      max(case when cc.TYPEID = '4' then cc.cost else 0 end) labor,
      (select sum(bb.ne) from (SELECT a.typeid,sum(a.DOSAGE*a.PRICE) ne
      FROM t_emc_final_data_hour a,
      (select * from v_emc_unit  where 1=1
      <if test="orgId != null and orgId !=''">
          and   ORGID in (select id from t_emc_org where
          FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})))
      </if>
      <if test="feedType != null and feedType != ''">
          and HEAT_TYPE = #{feedType}
      </if>
      <if test="type != null and type !=''">
          and  UNITTYPE  = #{type}
      </if>
      GROUP BY UNITID) c
      WHERE  a.UNITID = c.unitid
      <if test="pstartTime != null and pstartTime !=''">
          and   a.DOSAGE_TIME<![CDATA[ >= ]]> #{pstartTime}
      </if>
      <if test="pendTime != null and pendTime != ''">
          and   a.DOSAGE_TIME<![CDATA[ <= ]]> #{pendTime}
      </if>

      GROUP BY TYPEID)bb)ccs
      from (SELECT b.TYPEID,sum(b.COST) cost FROM t_emc_final_cost_day b,
      (select * from v_emc_unit  where 1=1
       <if test="orgId!=null and orgId!=''">
          and  ORGID in (select id from t_emc_org where FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})))
       </if>
      <if test="feedType != null and feedType != ''">
          and HEAT_TYPE = #{feedType}
      </if>
      <if test="type != null and type !=''">
          and  UNITTYPE  = #{type}
      </if>
      GROUP BY UNITID )c
      where  b.UNITID = c.unitid
      <if test="pstartTime != null and pstartTime !=''">
          and    b.cost_date<![CDATA[ >= ]]> #{pstartTime}
      </if>
      <if test="pendTime != null and pendTime != ''">
          and    b.cost_date<![CDATA[ <= ]]> #{pendTime}
      </if>
      GROUP BY b.TYPEID) cc)qq)mm;
  </select>
<!--组件-单耗趋势-->
    <select id="getenergycomparision" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        cc.dates,
        cc.num,
        (CASE
        WHEN cc.EXCELLENT IS NULL THEN
        0
        ELSE
        cc.EXCELLENT
        END) excellent,
        (CASE
        WHEN cc.STANDARD IS NULL THEN
        0
        ELSE
        cc.STANDARD
        END)  standard
        FROM
        (SELECT
        bb.dates,
        FORMAT(sum(bb.ne), 2) AS num,
        (select sum(EXCELLENT) from t_emc_expend_check where bb.dates <![CDATA[ >= ]]> SDATE and bb.dates <![CDATA[ <= ]]> EDATE and COMID=#{comId} and ORG_ID=#{orgId} group by ORG_ID) excellent,
        (select sum(STANDARD) from t_emc_expend_check where bb.dates <![CDATA[ >= ]]> SDATE and bb.dates <![CDATA[ <= ]]> EDATE and COMID=#{comId} and ORG_ID=#{orgId} group by ORG_ID) standard
        FROM (
        select m.dates,m.type,sum(m.num)/sum(m.area) ne from(select b.area,b.dates,b.num,b.UNITID,b.type type from (SELECT
        c.UNITID,
        date_format(a.DOSAGE_TIME, '%Y-%m-%d') dates,
        bbb.TYPE type,
        sum(a.DOSAGE * a.COAL_COEF) num,
        avg(a.AREA) area
        FROM
        t_emc_final_data_hour a,t_emc_energy_type bbb,
        (SELECT UNITID FROM v_emc_unit
        WHERE 1 = 1
        <if test="orgId != null and orgId !=''">
            and   ORGID in (select id from t_emc_org where
            FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})))
        </if>
        <if test="feedType != null and feedType !=''">
            and  HEAT_TYPE =#{feedType}
        </if>
        <if test="comId != null and comId !=''">
            and  COMID =#{comId}
        </if>
        <if test="type != null and type !=''">
            and  UNITTYPE  = #{type}
        </if>
        GROUP BY UNITID ) c
        WHERE  a.UNITID = c.unitid and a.TYPEID = bbb.id and bbb.TYPE <![CDATA[ <> ]]>'4'
        <if test="startTime != null and startTime !=''">
            and   a.DOSAGE_TIME<![CDATA[ >= ]]> #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and    a.DOSAGE_TIME<![CDATA[ <= ]]> #{endTime}
        </if>
        GROUP BY c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d'),	bbb.type) b)m group by  m.dates,m.type
        ) bb
        GROUP BY
        bb.dates
        ORDER BY
        bb.dates ASC)cc order by cc.dates;
    </select>

    <!--组件-昨天、今天、明天-->
    <select id="selectrecentDetail"  resultType="java.util.Map" parameterType="java.util.Map">
        select q.dates as 'today',sum(q.totalcol) as total,max((case when q.type= 1 then q.dh else 0 end)) as whater,
        max((case when q.type= 2 then q.dh else 0 end)) as electric,
        max((case when q.type= 3 then q.dh else 0 end)) as gas,
        max((case when q.type= 5 then q.dh else 0 end)) as coal,
        max((case when q.type= 6 then q.dh else 0 end)) as solar
        from (SELECT mm.dates,mm.type,ROUND(sum(mm.coles)/sum(mm.area),2)dh,sum(mm.coles) as totalcol
        from (select  c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d') as dates,
        bbb.type as type,sum(a.DOSAGE*a.COAL_COEF)as coles,AVG(a.AREA)as area
        FROM
        t_emc_final_data_hour a,t_emc_energy_type bbb,
        (SELECT UNITID FROM v_emc_unit
        WHERE 1 = 1
        <if test="orgId != null and orgId !=''">
            and   ORGID in (select id from t_emc_org where
            FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})))
        </if>
        <if test="feedType != null and feedType !=''">
            and  HEAT_TYPE =#{feedType}
        </if>
        <if test="comId != null and comId !=''">
            and  COMID =#{comId}
        </if>
        <if test="type != null and type !=''">
            and  UNITTYPE  = #{type}
        </if>
        GROUP BY UNITID ) c
        WHERE  a.UNITID = c.unitid and a.TYPEID = bbb.id and bbb.TYPE <![CDATA[ <>]]> '4'
        <if test="today != null and today !=''">
            and   a.DOSAGE_TIME <![CDATA[>=]]> CONCAT(#{today},' 00:00:00')
            and   a.DOSAGE_TIME <![CDATA[<=]]> CONCAT(#{today},' 23:59:59')
        </if>

        GROUP BY c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d'),	bbb.type)mm group by mm.dates,mm.type)q group by q.dates

        union all
        ( select q.dates as 'yesterday',sum(q.totalcol),max((case when q.type= 1 then q.dh else 0 end)),
        max((case when q.type= 2 then q.dh else 0 end)),
        max((case when q.type= 3 then q.dh else 0 end)),
        max((case when q.type= 5 then q.dh else 0 end)),
        max((case when q.type= 6 then q.dh else 0 end))
        from (SELECT mm.dates,mm.type,ROUND(sum(mm.coles)/sum(mm.area),2)dh ,sum(mm.coles) as totalcol
        from (select  c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d') as dates,
        bbb.type as type,sum(a.DOSAGE*a.COAL_COEF)as coles,AVG(a.AREA)as area
        FROM
        t_emc_final_data_hour a,t_emc_energy_type bbb,
        (SELECT UNITID FROM v_emc_unit
        WHERE 1 = 1
        <if test="orgId != null and orgId !=''">
            and   ORGID in (select id from t_emc_org where
            FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})))
        </if>
        <if test="feedType != null and feedType !=''">
            and  HEAT_TYPE =#{feedType}
        </if>
        <if test="comId != null and comId !=''">
            and  COMID =#{comId}
        </if>
        <if test="type != null and type !=''">
            and  UNITTYPE  = #{type}
        </if>
        GROUP BY UNITID ) c
        WHERE  a.UNITID = c.unitid and a.TYPEID = bbb.id and bbb.TYPE <![CDATA[ <>]]> '4'
        <if test="yesterday != null and yesterday !=''">
            and   a.DOSAGE_TIME <![CDATA[>=]]> CONCAT(#{yesterday},' 00:00:00')
            and   a.DOSAGE_TIME <![CDATA[<=]]> CONCAT(#{yesterday},' 23:59:59')
        </if>

        GROUP BY c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d'),	bbb.type)mm group by mm.dates,mm.type)q group by q.dates)
        union ALL
        ( select q.dates as 'towdayago',sum(q.totalcol),max((case when q.type= 1 then q.dh else 0 end)),
        max((case when q.type= 2 then q.dh else 0 end)),
        max((case when q.type= 3 then q.dh else 0 end)),
        max((case when q.type= 5 then q.dh else 0 end)),
        max((case when q.type= 6 then q.dh else 0 end))
        from (SELECT mm.dates,mm.type,ROUND(sum(mm.coles)/sum(mm.area),2)dh ,sum(mm.coles) as totalcol
        from (select  c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d') as dates,
        bbb.type as type,sum(a.DOSAGE*a.COAL_COEF)as coles,AVG(a.AREA)as area
        FROM
        t_emc_final_data_hour a,t_emc_energy_type bbb,
        (SELECT UNITID FROM v_emc_unit
        WHERE 1 = 1
        <if test="orgId != null and orgId !=''">
            and   ORGID in (select id from t_emc_org where
            FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})))
        </if>
        <if test="feedType != null and feedType !=''">
            and  HEAT_TYPE =#{feedType}
        </if>
        <if test="comId != null and comId !=''">
            and  COMID =#{comId}
        </if>
        <if test="type != null and type !=''">
            and  UNITTYPE  = #{type}
        </if>
        GROUP BY UNITID ) c
        WHERE  a.UNITID = c.unitid and a.TYPEID = bbb.id and bbb.TYPE <![CDATA[ <>]]> '4'
        <if test="towdayago != null and towdayago !=''">
            and   a.DOSAGE_TIME <![CDATA[>=]]> CONCAT(#{towdayago},' 00:00:00')
            and   a.DOSAGE_TIME <![CDATA[<=]]> CONCAT(#{towdayago},' 23:59:59')
        </if>

        GROUP BY c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d'),	bbb.type)mm group by mm.dates,mm.type)q group by q.dates)
        union ALL
        ( select q.dates as 'treedayago',sum(q.totalcol),max((case when q.type= 1 then q.dh else 0 end)),
        max((case when q.type= 2 then q.dh else 0 end)),
        max((case when q.type= 3 then q.dh else 0 end)),
        max((case when q.type= 5 then q.dh else 0 end)),
        max((case when q.type= 6 then q.dh else 0 end))
        from (SELECT mm.dates,mm.type,ROUND(sum(mm.coles)/sum(mm.area),2)dh ,sum(mm.coles) as totalcol
        from (select  c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d') as dates,
        bbb.type as type,sum(a.DOSAGE*a.COAL_COEF)as coles,AVG(a.AREA)as area
        FROM
        t_emc_final_data_hour a,t_emc_energy_type bbb,
        (SELECT UNITID FROM v_emc_unit
        WHERE 1 = 1
        <if test="orgId != null and orgId !=''">
            and   ORGID in (select id from t_emc_org where
            FIND_IN_SET(id,emc_func_org_getchilds(#{orgId})))
        </if>
        <if test="feedType != null and feedType !=''">
            and  HEAT_TYPE =#{feedType}
        </if>
        <if test="comId != null and comId !=''">
            and  COMID =#{comId}
        </if>
        <if test="type != null and type !=''">
            and  UNITTYPE  = #{type}
        </if>
        GROUP BY UNITID ) c
        WHERE  a.UNITID = c.unitid and a.TYPEID = bbb.id and bbb.TYPE <![CDATA[ <>]]> '4'
        <if test="treedayago != null and treedayago !=''">
            and   a.DOSAGE_TIME <![CDATA[>=]]> CONCAT(#{treedayago},' 00:00:00')
            and   a.DOSAGE_TIME <![CDATA[<=]]> CONCAT(#{treedayago},' 23:59:59')
        </if>
        GROUP BY c.UNITID, date_format(a.DOSAGE_TIME, '%Y-%m-%d'),	bbb.type)mm group by mm.dates,mm.type)q group by q.dates) order by dates asc
    </select>

    <select id="getplan" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
           p.num as plan
        FROM
            t_emc_energy_project p,
            t_emc_heat_season s
        WHERE
            p.SEASON_ID = s.id
        <if test="startTime != null and startTime !=''">
            and  s.SDATE &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime !=''">
            and  s.EDATE  &lt;= #{endTime}
        </if>
        <if test="orgId != null and orgId !=''">
            and  p.ORG_ID  = #{orgId}
        </if>
        <if test="comId != null and comId !=''">
            and  s.COMID  = #{comId}
        </if>
        ORDER BY
            s.EDATE DESC
        LIMIT 0, 1
    </select>

    <select id="getCurrentSeason" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        *
        FROM
        t_emc_heat_season t
        WHERE
        t.COMID = #{comId}
        AND t.SDATE <![CDATA[ <= ]]> #{sdate}
        AND t.EDATE <![CDATA[ >= ]]> #{edate}
    </select>


    <select id="getPreSeason" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        *
        FROM
        t_emc_heat_season t
        WHERE
        t.COMID = #{comId}
        AND t.EDATE <![CDATA[ < ]]> #{edate}
        ORDER BY t.EDATE DESC
    </select>

</mapper>