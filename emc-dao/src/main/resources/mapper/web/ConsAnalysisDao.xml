<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huak.home.dao.ConsAnalysisDao" >
    <resultMap id="BaseResultMap" type="com.huak.home.model.ConsSecond" >
        <result column="ID" property="id" jdbcType="VARCHAR" />
        <result column="ORGNAME" property="orgName" jdbcType="VARCHAR" />
        <result column="BQDH" property="totalBq" jdbcType="DOUBLE" />
        <result column="TQDH" property="totalTq" jdbcType="DOUBLE" />
        <result column="BQWATER" property="waterBq" jdbcType="DOUBLE" />
        <result column="TQWATER" property="waterTq" jdbcType="DOUBLE" />
        <result column="BQELECTRIC" property="electricBq" jdbcType="DOUBLE" />
        <result column="TQELECTRIC" property="electricTq" jdbcType="DOUBLE" />
        <result column="BQGAS" property="gasBq" jdbcType="DOUBLE" />
        <result column="TQGAS" property="gasTq" jdbcType="DOUBLE" />
        <result column="BQHEAT" property="heatBq" jdbcType="DOUBLE" />
        <result column="TQHEAT" property="heatTq" jdbcType="DOUBLE" />
        <result column="BQCOAL" property="coalBq" jdbcType="DOUBLE" />
        <result column="TQCOAL" property="coalTq" jdbcType="DOUBLE" />
        <result column="BQOIL" property="oilBq" jdbcType="DOUBLE" />
        <result column="TQOIL" property="oilTq" jdbcType="DOUBLE" />
    </resultMap>

    <select id="findAssessmentIndicators" parameterType="java.util.Map" resultMap="BaseResultMap">

        SELECT v.fgsid id,v.ORG_NAME orgname,
        ROUND(IFNULL(SUM(v.BQBM)/AVG(v.BQAREA),0),2) BQDH,
        ROUND(IFNULL(SUM(v1.BQBM)/AVG(v1.BQAREA),0),2) TQDH,
        ROUND(MAX(CASE v.TYPE WHEN '1' THEN v.BQDH ELSE 0 END),2) bqwater,
        ROUND(MAX(CASE v1.TYPE WHEN '1' THEN v1.BQDH ELSE 0 END),2) tqwater,
        ROUND(MAX(CASE v.TYPE WHEN '2' THEN v.BQDH ELSE 0 END),2) bqelectric,
        ROUND(MAX(CASE v1.TYPE WHEN '2' THEN v1.BQDH ELSE 0 END),2) tqelectric,
        ROUND(MAX(CASE v.TYPE WHEN '3' THEN v.BQDH ELSE 0 END),2) bqgas,
        ROUND(MAX(CASE v1.TYPE WHEN '3' THEN v1.BQDH ELSE 0 END),2) tqgas,
        ROUND(MAX(CASE v.TYPE WHEN '4' THEN v.BQDH ELSE 0 END),2) bqheat,
        ROUND(MAX(CASE v1.TYPE WHEN '4' THEN v1.BQDH ELSE 0 END),2) tqheat,
        ROUND(MAX(CASE v.TYPE WHEN '5' THEN v.BQDH ELSE 0 END),2) bqcoal,
        ROUND(MAX(CASE v1.TYPE WHEN '5' THEN v1.BQDH ELSE 0 END),2) tqcoal,
        ROUND(MAX(CASE v.TYPE WHEN '6' THEN v.BQDH ELSE 0 END),2) bqoil,
        ROUND(MAX(CASE v1.TYPE WHEN '6' THEN v1.BQDH ELSE 0 END),2) tqoil
        FROM
        (
        SELECT f.fgsid,f.ORG_NAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT a.fgsid,a.ORG_NAME,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,eet.TYPE FROM
        (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID FROM t_emc_final_data_hour fdh
        WHERE  fdh.DOSAGE_TIME<![CDATA[ >= ]]> #{startTime} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTime}
        GROUP BY fdh.UNITID,fdh.TYPEID) d1 ON d1.UNITID = vu.unitid
        LEFT JOIN t_emc_energy_type eet ON eet.ID = d1.TYPEID
        GROUP BY a.fgsid,a.ORG_NAME,eet.TYPE) f
        GROUP BY f.fgsid,f.ORG_NAME,f.TYPE
        ) v LEFT JOIN
        (
        SELECT f.fgsid,f.ORG_NAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT a.fgsid,a.ORG_NAME,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,eet.TYPE FROM
        (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID FROM t_emc_final_data_hour fdh
        WHERE fdh.DOSAGE_TIME <![CDATA[ >= ]]> #{startTimeTq} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTimeTq}
        GROUP BY fdh.UNITID,fdh.TYPEID) d1 ON d1.UNITID = vu.unitid
        LEFT JOIN t_emc_energy_type eet ON eet.ID = d1.TYPEID
        GROUP BY a.fgsid,a.ORG_NAME,eet.TYPE) f
        GROUP BY f.fgsid,f.ORG_NAME,f.TYPE
        ) v1 ON v.fgsid = v1.fgsid AND v.TYPE = v1.TYPE
        GROUP BY v.fgsid,v.ORG_NAME
    </select>

    <select id="fgsEnergyRatio" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT f.fgsid id,f.ORG_NAME name,
        ROUND(IFNULL(SUM(f.BQBM)/AVG(f.BQAREA),0),2) value
        FROM
        (SELECT a.fgsid,a.ORG_NAME,SUM(d1.BM) BQBM,SUM(d1.AREA) BQAREA FROM (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID
        FROM t_emc_final_data_hour fdh
        WHERE fdh.DOSAGE_TIME<![CDATA[ >= ]]> #{startTime} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTime}
        GROUP BY fdh.UNITID,fdh.TYPEID) d1 ON d1.UNITID = vu.unitid
        GROUP BY a.fgsid,a.ORG_NAME,d1.TYPEID) f
        GROUP BY f.fgsid,f.ORG_NAME
    </select>

    <select  id="fgsEnergyTrend" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT a.FGSID,a.ORG_NAME NAME,ROUND(IFNULL(SUM(hd.BQBM)/SUM(hd.AREA),0),2) BQDH,dt.DOSAGE_TIME DATE FROM
        (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        RIGHT JOIN (SELECT DATE_FORMAT(DOSAGE_TIME,'%Y-%m-%d') DOSAGE_TIME FROM t_emc_final_data_hour
        WHERE DOSAGE_TIME<![CDATA[ >= ]]> #{startTime} AND DOSAGE_TIME<![CDATA[ <= ]]> #{endTime} GROUP BY DATE_FORMAT(DOSAGE_TIME,'%y-%m-%d') ORDER BY DOSAGE_TIME) dt ON 1=1
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (
        SELECT d1.UNITID,SUM(d1.BM) BQBM,d1.DOSAGE_TIME,AVG(d1.AREA) AREA FROM
        (SELECT fdh.UNITID,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID,DATE_FORMAT(fdh.DOSAGE_TIME,'%Y-%m-%d') DOSAGE_TIME FROM t_emc_final_data_hour fdh
        WHERE fdh.DOSAGE_TIME<![CDATA[ >= ]]> #{startTime} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTime}
        GROUP BY fdh.UNITID,fdh.DOSAGE_TIME) d1 GROUP BY d1.UNITID,d1.DOSAGE_TIME ORDER BY DOSAGE_TIME
        ) hd ON hd.UNITID = vu.unitid AND hd.DOSAGE_TIME = dt.DOSAGE_TIME
        GROUP BY a.fgsid,a.ORG_NAME,dt.DOSAGE_TIME
        ORDER BY a.fgsid,dt.DOSAGE_TIME
    </select>

    <select  id="fgsEnergyAn" parameterType="java.util.Map" resultType="java.util.Map">

        SELECT v.fgsid ID,v.ORG_NAME ORGNAME,
        ROUND(IFNULL(SUM(v.BQBM)/AVG(v.BQAREA),0),2) BQDH,
        ROUND(IFNULL(SUM(v1.BQBM)/AVG(v1.BQAREA),0),2) TQDH
        FROM
        (
        SELECT f.fgsid,f.ORG_NAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT a.fgsid,a.ORG_NAME,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,eet.TYPE FROM
        (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID FROM t_emc_final_data_hour fdh
        WHERE  fdh.DOSAGE_TIME<![CDATA[ >= ]]> #{startTime} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTime}
        GROUP BY fdh.UNITID,fdh.TYPEID) d1 ON d1.UNITID = vu.unitid
        LEFT JOIN t_emc_energy_type eet ON eet.ID = d1.TYPEID
        GROUP BY a.fgsid,a.ORG_NAME,eet.TYPE) f
        GROUP BY f.fgsid,f.ORG_NAME,f.TYPE
        ) v LEFT JOIN
        (
        SELECT f.fgsid,f.ORG_NAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT a.fgsid,a.ORG_NAME,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,eet.TYPE FROM
        (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID FROM t_emc_final_data_hour fdh
        WHERE fdh.DOSAGE_TIME <![CDATA[ >= ]]> #{startTimeTq} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTimeTq}
        GROUP BY fdh.UNITID,fdh.TYPEID) d1 ON d1.UNITID = vu.unitid
        LEFT JOIN t_emc_energy_type eet ON eet.ID = d1.TYPEID
        GROUP BY a.fgsid,a.ORG_NAME,eet.TYPE) f
        GROUP BY f.fgsid,f.ORG_NAME,f.TYPE
        ) v1 ON v.fgsid = v1.fgsid AND v.TYPE = v1.TYPE
        GROUP BY v.fgsid,v.ORG_NAME

    </select>

    <select id="fgsEnergyRanking" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT v.fgsid ID,v.ORG_NAME NAME,
        ROUND(IFNULL(SUM(v.BQBM)/AVG(v.BQAREA),0),2) VALUE
        FROM
        (
        SELECT f.fgsid,f.ORG_NAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT a.fgsid,a.ORG_NAME,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,eet.TYPE FROM
        (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID FROM t_emc_final_data_hour fdh
        WHERE fdh.DOSAGE_TIME<![CDATA[ >= ]]> #{startTime} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTime}
        GROUP BY fdh.UNITID,fdh.TYPEID) d1 ON d1.UNITID = vu.unitid
        LEFT JOIN t_emc_energy_type eet ON eet.ID = d1.TYPEID
        GROUP BY a.fgsid,a.ORG_NAME,eet.TYPE) f
        GROUP BY f.fgsid,f.ORG_NAME,f.TYPE
        ) v
        GROUP BY v.fgsid,v.ORG_NAME
        ORDER BY IFNULL(SUM(v.BQBM)/AVG(v.BQAREA),0) DESC
    </select>

    <select id="exportAssessmentIndicators" parameterType="java.util.Map" resultMap="BaseResultMap">

        SELECT v.fgsid id,v.ORG_NAME orgname,
        ROUND(IFNULL(SUM(v.BQBM)/AVG(v.BQAREA),0),2) BQDH,
        ROUND(IFNULL(SUM(v1.BQBM)/AVG(v1.BQAREA),0),2) TQDH,
        ROUND(MAX(CASE v.TYPE WHEN '1' THEN v.BQDH ELSE 0 END),2) bqwater,
        ROUND(MAX(CASE v1.TYPE WHEN '1' THEN v1.BQDH ELSE 0 END),2) tqwater,
        ROUND(MAX(CASE v.TYPE WHEN '2' THEN v.BQDH ELSE 0 END),2) bqelectric,
        ROUND(MAX(CASE v1.TYPE WHEN '2' THEN v1.BQDH ELSE 0 END),2) tqelectric,
        ROUND(MAX(CASE v.TYPE WHEN '3' THEN v.BQDH ELSE 0 END),2) bqgas,
        ROUND(MAX(CASE v1.TYPE WHEN '3' THEN v1.BQDH ELSE 0 END),2) tqgas,
        ROUND(MAX(CASE v.TYPE WHEN '4' THEN v.BQDH ELSE 0 END),2) bqheat,
        ROUND(MAX(CASE v1.TYPE WHEN '4' THEN v1.BQDH ELSE 0 END),2) tqheat,
        ROUND(MAX(CASE v.TYPE WHEN '5' THEN v.BQDH ELSE 0 END),2) bqcoal,
        ROUND(MAX(CASE v1.TYPE WHEN '5' THEN v1.BQDH ELSE 0 END),2) tqcoal,
        ROUND(MAX(CASE v.TYPE WHEN '6' THEN v.BQDH ELSE 0 END),2) bqoil,
        ROUND(MAX(CASE v1.TYPE WHEN '6' THEN v1.BQDH ELSE 0 END),2) tqoil
        FROM
        (
        SELECT f.fgsid,f.ORG_NAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT a.fgsid,a.ORG_NAME,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,eet.TYPE FROM
        (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID FROM t_emc_final_data_hour fdh
        WHERE  fdh.DOSAGE_TIME<![CDATA[ >= ]]> #{startTime} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTime}
        GROUP BY fdh.UNITID,fdh.TYPEID) d1 ON d1.UNITID = vu.unitid
        LEFT JOIN t_emc_energy_type eet ON eet.ID = d1.TYPEID
        GROUP BY a.fgsid,a.ORG_NAME,eet.TYPE) f
        GROUP BY f.fgsid,f.ORG_NAME,f.TYPE
        ) v LEFT JOIN
        (
        SELECT f.fgsid,f.ORG_NAME,f.TYPE,f.BQ/f.BQAREA BQDH,f.BQBM,f.BQAREA
        FROM
        (SELECT a.fgsid,a.ORG_NAME,SUM(d1.BM) BQBM,SUM(d1.DOSAGE) BQ,SUM(d1.AREA) BQAREA,eet.TYPE FROM
        (SELECT t.fgsid,tmo.ORG_NAME,t.ID orgid FROM (
        SELECT
        ( SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = (SELECT ID FROM t_emc_org WHERE FIND_IN_SET( ID, emc_func_org_getparents (o.ID) ) AND P_ORG_ID = 0) ) fgsid,
        o.*
        FROM
        t_emc_org o
        WHERE o.COM_ID = #{comId}) t,
        (SELECT * FROM t_emc_org WHERE 1=1
        <if test="pOrgId != null and pOrgId !=''">
            AND P_ORG_ID = #{pOrgId}
        </if>
        <if test="orgId != null and orgId !=''">
            AND ID = #{orgId}
        </if>
        ) tmo
        WHERE tmo.ID = t.fgsid) a
        LEFT JOIN v_emc_unit vu ON vu.ORGID = a.orgid AND vu.HEAT_TYPE=#{feedType}
        <if test="orgType != null and orgType !=''">
            AND vu.UNITTYPE=#{orgType}
        </if>
        LEFT JOIN  (SELECT fdh.UNITID,SUM(fdh.DOSAGE) DOSAGE,SUM(fdh.DOSAGE*fdh.COAL_COEF) BM,AVG(fdh.AREA) AREA,fdh.TYPEID FROM t_emc_final_data_hour fdh
        WHERE fdh.DOSAGE_TIME <![CDATA[ >= ]]> #{startTimeTq} AND fdh.DOSAGE_TIME<![CDATA[ <= ]]> #{endTimeTq}
        GROUP BY fdh.UNITID,fdh.TYPEID) d1 ON d1.UNITID = vu.unitid
        LEFT JOIN t_emc_energy_type eet ON eet.ID = d1.TYPEID
        GROUP BY a.fgsid,a.ORG_NAME,eet.TYPE) f
        GROUP BY f.fgsid,f.ORG_NAME,f.TYPE
        ) v1 ON v.fgsid = v1.fgsid AND v.TYPE = v1.TYPE
        GROUP BY v.fgsid,v.ORG_NAME
    </select>
    
      <!-- 能耗子页面，单耗曲线，能源流相关数据查询开始 -->
	  <!-- 查询今年的集团单耗 -->
	  <!-- 查询条件map内容：{toolOrgId=38, toolFeedType=2, toolStartDate=2016-11-15, toolEndDate=2017-06-15, toolOrgType=} -->
	  <sql id="cur_last_time">
	  	<choose>
			<when test="toolStartDate!=null and toolStartDate!=''">
				AND (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= #{toolStartDate,jdbcType=VARCHAR}
			</when>
			<otherwise>
				AND (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= SUBDATE(CURDATE(), INTERVAL 5 DAY)
			</otherwise>
		</choose>
		<choose>
			<when test="toolEndDate!=null and toolEndDate!=''">
				AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= #{toolEndDate,jdbcType=VARCHAR})
			</when>
			<otherwise>
				AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= CURDATE())
			</otherwise>
		</choose>
		<choose>
			<when test="toolStartDate!=null and toolStartDate!=''">
				OR (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= SUBDATE(#{toolStartDate,jdbcType=VARCHAR}, INTERVAL 1 YEAR) 
			</when>
			<otherwise>
				OR (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= SUBDATE(SUBDATE(CURDATE(), INTERVAL 5 DAY), INTERVAL 1 YEAR)
			</otherwise>
		</choose>
		<choose>
			<when test="toolEndDate!=null and toolEndDate!=''">
				AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(#{toolEndDate,jdbcType=VARCHAR}, INTERVAL 1 YEAR))
			</when>
			<otherwise>
				AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(CURDATE(), INTERVAL 1 YEAR))
			</otherwise>
		</choose>
	  </sql>
	  <sql id="cur_time">
	  	<choose>
			<when test="toolStartDate!=null and toolStartDate!=''">
				AND (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= #{toolStartDate,jdbcType=VARCHAR}
			</when>
			<otherwise>
				AND (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= SUBDATE(CURDATE(), INTERVAL 5 DAY)
			</otherwise>
		</choose>
		<choose>
			<when test="toolEndDate!=null and toolEndDate!=''">
				AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= #{toolEndDate,jdbcType=VARCHAR})
			</when>
			<otherwise>
				AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= CURDATE())
			</otherwise>
		</choose>
	  </sql>
	  <sql id="between_and">
	  	BETWEEN 
			<choose>
			<when test="toolStartDate!=null and toolStartDate!=''">
				#{toolStartDate,jdbcType=VARCHAR}
			</when>
			<otherwise>
				SUBDATE(CURDATE(), INTERVAL 5 DAY)
			</otherwise>
		</choose>
		AND 
		<choose>
			<when test="toolEndDate!=null and toolEndDate!=''">
				#{toolEndDate,jdbcType=VARCHAR}
			</when>
			<otherwise>
				CURDATE()
			</otherwise>
		</choose>
	  </sql>
    <!-- 查询单耗折线数据 -->
    <select id="groupDanHao" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT sum(C.dosage / C.area) groupEnergy, sum( CASE C.energyType WHEN '4' THEN C.dosage / C.area ELSE 0 END) AS hotEnergy, 
        	   sum( CASE C.energyType WHEN '2' THEN C.dosage / C.area ELSE 0 END ) AS electricEnergy, 
        	   SUM( CASE C.energyType WHEN '1' THEN C.dosage / C.area ELSE 0 END ) AS waterEnergy, 
        	   SUM( CASE C.energyType WHEN '3' THEN C.dosage / C.area ELSE 0 END ) AS gasEnergy, 
        	   SUM( CASE C.energyType WHEN '5' THEN C.dosage / C.area ELSE 0 END ) AS coalEnergy, 
        	   SUM( CASE C.energyType WHEN '6' THEN C.dosage / C.area ELSE 0 END ) AS oilEnergy, C.yeardate,
        	   ( CASE WHEN DATE_FORMAT(C.yeardate, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) curyear 
        FROM ( 
        	SELECT sum(B.area) area, sum(B.dosage) dosage, SUM(B.total) total, B.energytype, B.yeardate 
        	FROM ( 
        		SELECT vu.UNITID 
        		FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID <if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if> ) 
        		WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) AND P_ORG_ID != '0' ) A 
        		LEFT JOIN ( 
        			SELECT h.UNITID AS unitid, avg(h.AREA) area, sum(h.DOSAGE) AS dosage, sum(h.DOSAGE * h.COAL_COEF) AS total, et.type AS energytype, 
        			DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate 
        			FROM ( t_emc_final_data_hour h LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id ) 
        			WHERE 1 = 1 <include refid="cur_last_time" /> GROUP BY unitid, energytype, yeardate 
        		) B ON A.UNITID = B.unitid 
        		GROUP BY B.energytype, B.yeardate 
        	) C 
        WHERE C.yeardate IS NOT NULL 
        GROUP BY C.yeardate 
        ORDER BY C.yearDate ASC
    </select>
    
    <!-- 查询单耗同比统计数据 -->
    <select id="groupDanHaoTotal" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT sum(C.total) / avg(C.area) groupEnergy, sum( CASE C.energyType WHEN '4' THEN C.dosage / C.area ELSE 0 END) AS hotEnergy, 
        	   sum( CASE C.energyType WHEN '2' THEN C.dosage / C.area ELSE 0 END ) AS electricEnergy, 
        	   SUM( CASE C.energyType WHEN '1' THEN C.dosage / C.area ELSE 0 END ) AS waterEnergy, 
        	   SUM( CASE C.energyType WHEN '3' THEN C.dosage / C.area ELSE 0 END ) AS gasEnergy, 
        	   SUM( CASE C.energyType WHEN '5' THEN C.dosage / C.area ELSE 0 END ) AS coalEnergy, 
        	   SUM( CASE C.energyType WHEN '6' THEN C.dosage / C.area ELSE 0 END ) AS oilEnergy, C.curyear 
        FROM( 
        	   SELECT sum(B.area) area, sum(B.dosage) dosage, SUM(B.total) total, B.energytype, B.curyear 
        	   FROM ( 
        	   		SELECT vu.UNITID 
        	   		FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID <if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if> ) 
        	   		WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) AND P_ORG_ID != '0' ) A 
        	   		LEFT JOIN ( 
        	   			SELECT h.UNITID AS unitid, avg(h.AREA) area, sum(h.DOSAGE) AS dosage, sum(h.DOSAGE * h.COAL_COEF) AS total, et.type AS energytype, 
        	   			( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) curyear 
        	   			FROM ( t_emc_final_data_hour h LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id ) 
        	   			WHERE 1 = 1 <include refid="cur_last_time" /> 
        	   			GROUP BY unitid, energytype, curyear 
        	   		) B ON A.UNITID = B.unitid 
        	   		GROUP BY B.energytype, B.curyear 
        	   	) C 
        WHERE C.curyear IS NOT NULL 
        GROUP BY C.curyear
    </select>
    <!-- 查询能源流明细 -->
  <select id="energyFlowTable" resultType="java.util.Map" parameterType="java.util.Map">
	  SELECT
		D.unitname,
		round(D.curGroupEnergy,2) groupE,
		round(if(D.lastGroupEnergy=0,0,(D.curGroupEnergy-D.lastGroupEnergy)/D.lastGroupEnergy*100),2) groupS,
		if(D.lastGroupEnergy>D.curGroupEnergy,'1','0') groupR,
		round(D.curWaterEnergy,2) waterE,
		round(if(D.lastWaterEnergy=0,0,(D.curWaterEnergy-D.lastWaterEnergy)/D.lastWaterEnergy*100),2) waterS,
		if(D.lastWaterEnergy>D.curWaterEnergy,'1','0') waterR,
		round(D.curElectricEnergy,2) elecE,
		round(if(D.lastElectricEnergy=0,0,(D.curElectricEnergy-D.lastElectricEnergy)/D.lastElectricEnergy*100),2) elecS,
		if(D.lastElectricEnergy>D.curElectricEnergy,'1','0') elecR,
		round(D.curGasEnergy,2) gasE,
		round(if(D.lastGasEnergy=0,0,(D.curGasEnergy-D.lastGasEnergy)/D.lastGasEnergy*100),2) gasS,
		if(D.lastGasEnergy>D.curGasEnergy,'1','0') gasR,
		round(D.curGroupEnergy,2) hotE,
		round(if(D.lastGroupEnergy=0,0,(D.curGroupEnergy-D.lastGroupEnergy)/D.lastGroupEnergy*100),2) hotS,
		if(D.lastGroupEnergy>D.curGroupEnergy,'1','0') hotR,
		round(D.curCoalEnergy,2) coalE,
		round(if(D.lastCoalEnergy=0,0,(D.curCoalEnergy-D.lastCoalEnergy)/D.lastCoalEnergy*100),2) coalS,
		if(D.lastCoalEnergy>D.curCoalEnergy,'1','0') coalR
	FROM
		(
	  	SELECT C.unitname, SUM( CASE WHEN C.season='0' THEN C.total/C.area ELSE 0 END) AS lastGroupEnergy, 
		  	SUM( CASE WHEN C.season='1' THEN C.total/C.area ELSE 0 END ) AS curGroupEnergy, 
		  	SUM( CASE WHEN C.energyType='1' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastWaterEnergy, 
		  	SUM( CASE WHEN C.energyType='1' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curWaterEnergy, 
		  	SUM( CASE WHEN C.energyType='2' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastElectricEnergy, 
		  	SUM( CASE WHEN C.energyType='2' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curElectricEnergy, 
		  	SUM( CASE WHEN C.energyType='3' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastGasEnergy, 
		  	SUM( CASE WHEN C.energyType='3' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curGasEnergy, 
		  	SUM( CASE WHEN C.energyType='4' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastHotEnergy, 
		  	SUM( CASE WHEN C.energyType='4' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curHotEnergy, 
		  	SUM( CASE WHEN C.energyType='5' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastCoalEnergy, 
		  	SUM( CASE WHEN C.energyType='5' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curCoalEnergy 
	  	FROM( 
	  		SELECT B.unitid, 
	  			( CASE A.UNITTYPE WHEN '1' THEN ( SELECT FEED_NAME FROM t_emc_unit_feed WHERE id = A.UNITID ) 
	  			WHEN '2' THEN ( SELECT NET_NAME FROM t_emc_unit_net WHERE id = A.UNITID ) 
	  			WHEN '3' THEN ( SELECT STATION_NAME FROM t_emc_unit_station WHERE id = A.UNITID ) 
	  			WHEN '4' THEN ( SELECT LINE_NAME FROM t_emc_unit_line WHERE id = A.UNITID ) 
	  			WHEN '5' THEN ( SELECT ROOM_NAME FROM t_emc_unit_room WHERE id = A.UNITID ) END ) unitname, 
	  			sum(B.area) area,SUM(B.dosage) dosage, SUM(B.total) total, B.energytype, B.season 
	  		FROM ( 
	  			SELECT vu.UNITID, vu.UNITTYPE FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
				<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if> ) 
	  			WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
	  				  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
	  			LEFT JOIN ( 
		  			SELECT h.UNITID AS unitid,avg(h.AREA) area, SUM(h.DOSAGE) AS dosage, SUM(h.DOSAGE * h.COAL_COEF) AS total, et.type AS energytype, 
		  				( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) season 
		  			FROM ( t_emc_final_data_hour h LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id ) 
		  			WHERE 1 = 1 <include refid="cur_last_time" />
		  			GROUP BY unitid, energytype 
		  		) B 
	  			ON A.UNITID = B.unitid WHERE B.dosage IS NOT NULL 
	  		GROUP BY B.unitid, B.energytype, B.season ) C 
	  	GROUP BY C.unitid
	 ) D
  </select>
  <!-- 导出能源流 -->
  <select id="exportEnergyFlowDetail" resultType="java.util.Map" parameterType="java.util.Map">
	  SELECT
		D.unitname UNITNAME,
		round(D.lastGroupEnergy,2) LASTGROUP,
		round(D.curGroupEnergy,2) CURGROUP,
		concat(cast(round(if(D.lastGroupEnergy=0,0,(D.curGroupEnergy-D.lastGroupEnergy)/D.lastGroupEnergy*100),2) as CHAR(32)),'%') GROUPS,
		round(D.lastWaterEnergy,2) LASTWATER,
		round(D.curWaterEnergy,2) CURWATER,
		concat(cast(round(if(D.lastWaterEnergy=0,0,(D.curWaterEnergy-D.lastWaterEnergy)/D.lastWaterEnergy*100),2) as CHAR(32)),'%') WATERS,
		round(D.lastElectricEnergy,2) LASTELEC,
		round(D.curElectricEnergy,2) CURELEC,
		concat(cast(round(if(D.lastElectricEnergy=0,0,(D.curElectricEnergy-D.lastElectricEnergy)/D.lastElectricEnergy*100),2) as CHAR(32)),'%') ELECS,
		round(D.lastGasEnergy,2) LASTGAS,
		round(D.curGasEnergy,2) CURGAS,
		concat(cast(round(if(D.lastGasEnergy=0,0,(D.curGasEnergy-D.lastGasEnergy)/D.lastGasEnergy*100),2) as CHAR(32)),'%') GASS,
		round(D.lastGroupEnergy,2) LASTHOT,
		round(D.curGroupEnergy,2) CURHOT,
		concat(cast(round(if(D.lastGroupEnergy=0,0,(D.curGroupEnergy-D.lastGroupEnergy)/D.lastGroupEnergy*100),2) as CHAR(32)),'%') HOTS,
		round(D.lastCoalEnergy,2) LASTCOAL,
		round(D.curCoalEnergy,2) CURCOAL,
		concat(cast(round(if(D.lastCoalEnergy=0,0,(D.curCoalEnergy-D.lastCoalEnergy)/D.lastCoalEnergy*100),2) as CHAR(32)),'%') COALS
	FROM
		(
	  	SELECT C.unitname, SUM( CASE WHEN C.season='0' THEN C.total/C.area ELSE 0 END) AS lastGroupEnergy, 
		  	SUM( CASE WHEN C.season='1' THEN C.total/C.area ELSE 0 END ) AS curGroupEnergy, 
		  	SUM( CASE WHEN C.energyType='1' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastWaterEnergy, 
		  	SUM( CASE WHEN C.energyType='1' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curWaterEnergy, 
		  	SUM( CASE WHEN C.energyType='2' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastElectricEnergy, 
		  	SUM( CASE WHEN C.energyType='2' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curElectricEnergy, 
		  	SUM( CASE WHEN C.energyType='3' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastGasEnergy, 
		  	SUM( CASE WHEN C.energyType='3' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curGasEnergy, 
		  	SUM( CASE WHEN C.energyType='4' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastHotEnergy, 
		  	SUM( CASE WHEN C.energyType='4' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curHotEnergy, 
		  	SUM( CASE WHEN C.energyType='5' and C.season='0' THEN C.dosage/C.area ELSE 0 END ) AS lastCoalEnergy, 
		  	SUM( CASE WHEN C.energyType='5' and C.season='1' THEN C.dosage/C.area ELSE 0 END ) AS curCoalEnergy 
	  	FROM( 
	  		SELECT B.unitid, 
	  			( CASE A.UNITTYPE WHEN '1' THEN ( SELECT FEED_NAME FROM t_emc_unit_feed WHERE id = A.UNITID ) 
	  			WHEN '2' THEN ( SELECT NET_NAME FROM t_emc_unit_net WHERE id = A.UNITID ) 
	  			WHEN '3' THEN ( SELECT STATION_NAME FROM t_emc_unit_station WHERE id = A.UNITID ) 
	  			WHEN '4' THEN ( SELECT LINE_NAME FROM t_emc_unit_line WHERE id = A.UNITID ) 
	  			WHEN '5' THEN ( SELECT ROOM_NAME FROM t_emc_unit_room WHERE id = A.UNITID ) END ) unitname, 
	  			sum(B.area) area,SUM(B.dosage) dosage, SUM(B.total) total, B.energytype, B.season 
	  		FROM ( 
	  			SELECT vu.UNITID, vu.UNITTYPE FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
				<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if> ) 
	  			WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
	  				  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
	  			LEFT JOIN ( 
		  			SELECT h.UNITID AS unitid,avg(h.AREA) area, SUM(h.DOSAGE) AS dosage, SUM(h.DOSAGE * h.COAL_COEF) AS total, et.type AS energytype, 
		  				( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) season 
		  			FROM ( t_emc_final_data_hour h LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id ) 
		  			WHERE 1 = 1 <include refid="cur_last_time" />
		  			GROUP BY unitid, energytype 
		  		) B 
	  			ON A.UNITID = B.unitid WHERE B.dosage IS NOT NULL 
	  		GROUP BY B.unitid, B.energytype, B.season ) C 
	  	GROUP BY C.unitid
	 ) D
  </select>
  <!-- 查询能源流占比分布图 -->
  <select id="energyFlowPie" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT(CASE type.unittype when '1' then '供热源' when '2' then '一次网' when '3' then '换热站' 
  		   when '4' then '二次线' when '5' then '民户' end) name, round(IFNULL(C.total,0),2) value 
  	FROM ( SELECT '1' unittype FROM DUAL UNION SELECT '2' unittype FROM DUAL UNION SELECT '3' unittype 
  		   FROM DUAL UNION SELECT '4' unittype FROM DUAL UNION SELECT '5' unittype FROM DUAL
  	) type LEFT JOIN (
	  	SELECT A.UNITTYPE, sum(B.total)/sum(B.area) total 
	  	FROM( 
	  		SELECT vu.UNITID, vu.UNITTYPE 
	  		FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
			<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if>) 
	  		WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
	  			  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
	  		LEFT JOIN ( 
	  			SELECT h.UNITID AS unitid,avg(h.AREA) area, sum(h.DOSAGE * h.COAL_COEF) AS total, 
	  			( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) season 
	  			FROM t_emc_final_data_hour h 
	  			WHERE 1 = 1 <include refid="cur_time" />
	  			GROUP BY unitid 
	  		) B ON A.UNITID = B.unitid 
	  	WHERE B.total IS NOT NULL 
	  	GROUP BY A.UNITTYPE
	) C on type.unittype = C.UNITTYPE
  </select>
  <!-- 查询能源流趋势对比图 -->
  <select id="energyFlowLine" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT concat('type',A.UNITTYPE) unittype, SUM(B.total)/sum(B.area) total, B.yeardate 
  	FROM( 
  		SELECT vu.UNITID, vu.UNITTYPE 
  		FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
		<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if>) 
  		WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
  			  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
  		LEFT JOIN ( 
  			SELECT h.UNITID AS unitid,avg(h.AREA) area, sum(h.DOSAGE * h.COAL_COEF) AS total, DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate 
  			FROM t_emc_final_data_hour h 
  			WHERE 1 = 1 <include refid="cur_time" />
  			GROUP BY unitid,yeardate 
  		) B ON A.UNITID = B.unitid 
  	WHERE B.total IS NOT NULL 
  	GROUP BY A.UNITTYPE,B.yeardate
  	ORDER BY B.yeardate asc
  </select>
  <!-- 查询能源流同比 -->
  <select id="energyFlowBar" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT type.unittype, round(IFNULL(C.lastTotal,0),2) last, round(IFNULL(C.curTotal,0),2) cur 
  	FROM( SELECT '1' unittype FROM DUAL UNION SELECT '2' unittype FROM DUAL UNION SELECT '3' unittype FROM DUAL UNION 
  		  SELECT '4' unittype FROM DUAL UNION SELECT '5' unittype FROM DUAL) type 
  	LEFT JOIN (
	  	SELECT
			BB.UNITTYPE,
			IFNULL(BB.lastTotal / BB.lastArea,0) lastTotal,
			IFNULL(BB.curTotal / BB.curArea,0) curTotal
		FROM
			(
		  	SELECT A.UNITTYPE, IFNULL(sum(case B.season when '0' then B.total end),0) lastTotal, 
		  	IFNULL(sum(case B.season when '1' then B.total end),0) curTotal, 
		  	IFNULL(sum(case B.season when '0' then B.area end),0) lastArea,
		  	IFNULL(sum(case B.season when '1' then B.area end),0) curArea 
		  	FROM( SELECT vu.UNITID, vu.UNITTYPE FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
			<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if>) 
		  	WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
		  		  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
		  	LEFT JOIN ( 
		  		SELECT h.UNITID AS unitid,avg(h.AREA) area, sum(h.DOSAGE * h.COAL_COEF) AS total, 
		  		( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) season 
		  		FROM t_emc_final_data_hour h 
		  		WHERE 1 = 1 <include refid="cur_last_time" />
		  		GROUP BY unitid 
		  	) B ON A.UNITID = B.unitid 
		  	WHERE B.total IS NOT NULL 
		  	GROUP BY A.UNITTYPE
		  )BB
	) C ON type.unittype = C.UNITTYPE
	ORDER BY type.unittype
  </select>
  <!-- 单耗子页面，单耗曲线，能源流相关数据查询结束 -->
</mapper>