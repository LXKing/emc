<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huak.home.dao.EnergyMonitorDao" >
  <resultMap id="BaseResultMap" type="com.huak.home.model.EnergyMonitor" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="COMID" property="comid" jdbcType="VARCHAR" />
    <result column="UNITID" property="unitid" jdbcType="VARCHAR" />
    <result column="NODEID" property="nodeid" jdbcType="VARCHAR" />
    <result column="TYPEID" property="typeid" jdbcType="VARCHAR" />
    <result column="DOSAGE_TIME" property="dosageTime" jdbcType="VARCHAR" />
    <result column="DOSAGE" property="dosage" jdbcType="DOUBLE" />
    <result column="AREA" property="area" jdbcType="DOUBLE" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="WTEMP" property="wtemp" jdbcType="DOUBLE" />
    <result column="CWTEMP" property="cwtemp" jdbcType="DOUBLE" />
    <result column="COAL_COEF" property="coalCoef" jdbcType="DOUBLE" />
    <result column="C_COEF" property="cCoef" jdbcType="DOUBLE" />
    <result column="ITEMP" property="itemp" jdbcType="DOUBLE" />
    <result column="CITEMP" property="citemp" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, COMID, UNITID, NODEID, TYPEID, DOSAGE_TIME, DOSAGE, AREA, PRICE, WTEMP, CWTEMP, 
    COAL_COEF, C_COEF, ITEMP, CITEMP
  </sql>
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_emc_final_data_hour
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <!-- 能耗子页面，能耗曲线，能源流相关数据查询开始 -->
  <!-- 查询今年的集团能耗 -->
  <!-- 查询条件map内容：{toolOrgId=38, toolFeedType=2, toolStartDate=2016-11-15, toolEndDate=2017-06-15, toolOrgType=} -->
  <sql id="cur_last_time">
  	<choose>
		<when test="toolStartDate!=null and toolStartDate!=''">
			AND (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= #{toolStartDate,jdbcType=VARCHAR}
		</when>
		<otherwise>
			AND (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= SUBDATE(CURDATE(), INTERVAL 5 DAY)
		</otherwise>
	</choose>
	<choose>
		<when test="toolEndDate!=null and toolEndDate!=''">
			AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= #{toolEndDate,jdbcType=VARCHAR})
		</when>
		<otherwise>
			AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= CURDATE())
		</otherwise>
	</choose>
	<choose>
		<when test="toolStartDate!=null and toolStartDate!=''">
			OR (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= SUBDATE(#{toolStartDate,jdbcType=VARCHAR}, INTERVAL 1 YEAR) 
		</when>
		<otherwise>
			OR (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= SUBDATE(SUBDATE(CURDATE(), INTERVAL 5 DAY), INTERVAL 1 YEAR)
		</otherwise>
	</choose>
	<choose>
		<when test="toolEndDate!=null and toolEndDate!=''">
			AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(#{toolEndDate,jdbcType=VARCHAR}, INTERVAL 1 YEAR))
		</when>
		<otherwise>
			AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= SUBDATE(CURDATE(), INTERVAL 1 YEAR))
		</otherwise>
	</choose>
  </sql>
  <sql id="cur_time">
  	<choose>
		<when test="toolStartDate!=null and toolStartDate!=''">
			AND (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= #{toolStartDate,jdbcType=VARCHAR}
		</when>
		<otherwise>
			AND (DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') >= SUBDATE(CURDATE(), INTERVAL 5 DAY)
		</otherwise>
	</choose>
	<choose>
		<when test="toolEndDate!=null and toolEndDate!=''">
			AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= #{toolEndDate,jdbcType=VARCHAR})
		</when>
		<otherwise>
			AND DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') &lt;= CURDATE())
		</otherwise>
	</choose>
  </sql>
  <sql id="between_and">
  	BETWEEN 
		<choose>
		<when test="toolStartDate!=null and toolStartDate!=''">
			#{toolStartDate,jdbcType=VARCHAR}
		</when>
		<otherwise>
			SUBDATE(CURDATE(), INTERVAL 5 DAY)
		</otherwise>
	</choose>
	AND 
	<choose>
		<when test="toolEndDate!=null and toolEndDate!=''">
			#{toolEndDate,jdbcType=VARCHAR}
		</when>
		<otherwise>
			CURDATE()
		</otherwise>
	</choose>
  </sql>
  <select id="groupEnergy" resultType="java.util.Map" parameterType="java.util.Map">
	SELECT sum(C.total) AS groupEnergy, 
		sum( CASE C.energyType WHEN '4' THEN C.dosage ELSE 0 END) AS hotEnergy, 
		sum( CASE C.energyType WHEN '2' THEN C.dosage ELSE 0 END ) AS electricEnergy, 
		SUM( CASE C.energyType WHEN '1' THEN C.dosage ELSE 0 END ) AS waterEnergy, 
		SUM( CASE C.energyType WHEN '3' THEN C.dosage ELSE 0 END ) AS gasEnergy, 
		SUM( CASE C.energyType WHEN '5' THEN C.dosage ELSE 0 END ) AS coalEnergy, 
		SUM( CASE C.energyType WHEN '6' THEN C.dosage ELSE 0 END ) AS oilEnergy, C.yeardate,
		( CASE WHEN DATE_FORMAT(C.yeardate, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) curyear 
	FROM ( 
		SELECT sum(B.dosage) dosage, SUM(B.total) total, B.energytype, B.yeardate 
		FROM ( SELECT vu.UNITID FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
			   <if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if> 
			 ) 
		WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) AND P_ORG_ID != '0' ) A 
		LEFT JOIN ( 
			SELECT h.UNITID AS unitid, sum(h.DOSAGE) AS dosage, sum(h.DOSAGE * h.COAL_COEF) AS total, et.type AS energytype, 
			DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate 
			FROM ( t_emc_final_data_hour h LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id ) 
			WHERE 1 = 1 <include refid="cur_last_time" /> 
			GROUP BY unitid, energytype, yeardate 
		) B ON A.UNITID = B.unitid 
		GROUP BY B.energytype, B.yeardate 
	) C where C.yeardate is not NULL 
	GROUP BY C.yeardate ORDER BY C.yearDate ASC
  </select>
  
  <!-- 查询能源流明细 -->
  <select id="energyFlowTable" resultType="java.util.Map" parameterType="java.util.Map">
	  SELECT
		D.unitname,
		D.curGroupEnergy groupE,
		round(if(D.lastGroupEnergy=0,0,(D.curGroupEnergy-D.lastGroupEnergy)/D.lastGroupEnergy*100),2) groupS,
		if(D.lastGroupEnergy>D.curGroupEnergy,'1','0') groupR,
		D.curWaterEnergy waterE,
		round(if(D.lastWaterEnergy=0,0,(D.curWaterEnergy-D.lastWaterEnergy)/D.lastWaterEnergy*100),2) waterS,
		if(D.lastWaterEnergy>D.curWaterEnergy,'1','0') waterR,
		D.curElectricEnergy elecE,
		round(if(D.lastElectricEnergy=0,0,(D.curElectricEnergy-D.lastElectricEnergy)/D.lastElectricEnergy*100),2) elecS,
		if(D.lastElectricEnergy>D.curElectricEnergy,'1','0') elecR,
		D.curGasEnergy gasE,
		round(if(D.lastGasEnergy=0,0,(D.curGasEnergy-D.lastGasEnergy)/D.lastGasEnergy*100),2) gasS,
		if(D.lastGasEnergy>D.curGasEnergy,'1','0') gasR,
		D.curGroupEnergy hotE,
		round(if(D.lastGroupEnergy=0,0,(D.curGroupEnergy-D.lastGroupEnergy)/D.lastGroupEnergy*100),2) hotS,
		if(D.lastGroupEnergy>D.curGroupEnergy,'1','0') hotR,
		D.curCoalEnergy coalE,
		round(if(D.lastCoalEnergy=0,0,(D.curCoalEnergy-D.lastCoalEnergy)/D.lastCoalEnergy*100),2) coalS,
		if(D.lastCoalEnergy>D.curCoalEnergy,'1','0') coalR
	FROM
		(
	  	SELECT C.unitname, SUM( CASE WHEN C.season='0' THEN C.total ELSE 0 END) AS lastGroupEnergy, 
		  	SUM( CASE WHEN C.season='1' THEN C.total ELSE 0 END ) AS curGroupEnergy, 
		  	SUM( CASE WHEN C.energyType='1' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastWaterEnergy, 
		  	SUM( CASE WHEN C.energyType='1' and C.season='1' THEN C.dosage ELSE 0 END ) AS curWaterEnergy, 
		  	SUM( CASE WHEN C.energyType='2' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastElectricEnergy, 
		  	SUM( CASE WHEN C.energyType='2' and C.season='1' THEN C.dosage ELSE 0 END ) AS curElectricEnergy, 
		  	SUM( CASE WHEN C.energyType='3' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastGasEnergy, 
		  	SUM( CASE WHEN C.energyType='3' and C.season='1' THEN C.dosage ELSE 0 END ) AS curGasEnergy, 
		  	SUM( CASE WHEN C.energyType='4' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastHotEnergy, 
		  	SUM( CASE WHEN C.energyType='4' and C.season='1' THEN C.dosage ELSE 0 END ) AS curHotEnergy, 
		  	SUM( CASE WHEN C.energyType='5' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastCoalEnergy, 
		  	SUM( CASE WHEN C.energyType='5' and C.season='1' THEN C.dosage ELSE 0 END ) AS curCoalEnergy 
	  	FROM( 
	  		SELECT B.unitid, 
	  			( CASE A.UNITTYPE WHEN '1' THEN ( SELECT FEED_NAME FROM t_emc_unit_feed WHERE id = A.UNITID ) 
	  			WHEN '2' THEN ( SELECT NET_NAME FROM t_emc_unit_net WHERE id = A.UNITID ) 
	  			WHEN '3' THEN ( SELECT STATION_NAME FROM t_emc_unit_station WHERE id = A.UNITID ) 
	  			WHEN '4' THEN ( SELECT LINE_NAME FROM t_emc_unit_line WHERE id = A.UNITID ) 
	  			WHEN '5' THEN ( SELECT ROOM_NAME FROM t_emc_unit_room WHERE id = A.UNITID ) END ) unitname, 
	  			SUM(B.dosage) dosage, SUM(B.total) total, B.energytype, B.season 
	  		FROM ( 
	  			SELECT vu.UNITID, vu.UNITTYPE FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
				<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if> ) 
	  			WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
	  				  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
	  			LEFT JOIN ( 
		  			SELECT h.UNITID AS unitid, SUM(h.DOSAGE) AS dosage, SUM(h.DOSAGE * h.COAL_COEF) AS total, et.type AS energytype, 
		  				( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) season 
		  			FROM ( t_emc_final_data_hour h LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id ) 
		  			WHERE 1 = 1 <include refid="cur_last_time" />
		  			GROUP BY unitid, energytype 
		  		) B 
	  			ON A.UNITID = B.unitid WHERE B.dosage IS NOT NULL 
	  		GROUP BY B.unitid, B.energytype, B.season ) C 
	  	GROUP BY C.unitid
	 ) D
  </select>
  <!-- 导出 -->
  <select id="exportEnergyFlowDetail" resultType="java.util.Map" parameterType="java.util.Map">
	  SELECT
		D.unitname UNITNAME,
		round(D.lastGroupEnergy,2) LASTGROUP,
		round(D.curGroupEnergy,2) CURGROUP,
		concat(cast(round(if(D.lastGroupEnergy=0,0,(D.curGroupEnergy-D.lastGroupEnergy)/D.lastGroupEnergy*100),2) as CHAR(32)),'%') GROUPS,
		round(D.lastWaterEnergy,2) LASTWATER,
		round(D.curWaterEnergy,2) CURWATER,
		concat(cast(round(if(D.lastWaterEnergy=0,0,(D.curWaterEnergy-D.lastWaterEnergy)/D.lastWaterEnergy*100),2) as CHAR(32)),'%') WATERS,
		round(D.lastElectricEnergy,2) LASTELEC,
		round(D.curElectricEnergy,2) CURELEC,
		concat(cast(round(if(D.lastElectricEnergy=0,0,(D.curElectricEnergy-D.lastElectricEnergy)/D.lastElectricEnergy*100),2) as CHAR(32)),'%') ELECS,
		round(D.lastGasEnergy,2) LASTGAS,
		round(D.curGasEnergy,2) CURGAS,
		concat(cast(round(if(D.lastGasEnergy=0,0,(D.curGasEnergy-D.lastGasEnergy)/D.lastGasEnergy*100),2) as CHAR(32)),'%') GASS,
		round(D.lastGroupEnergy,2) LASTHOT,
		round(D.curGroupEnergy,2) CURHOT,
		concat(cast(round(if(D.lastGroupEnergy=0,0,(D.curGroupEnergy-D.lastGroupEnergy)/D.lastGroupEnergy*100),2) as CHAR(32)),'%') HOTS,
		round(D.lastCoalEnergy,2) LASTCOAL,
		round(D.curCoalEnergy,2) CURCOAL,
		concat(cast(round(if(D.lastCoalEnergy=0,0,(D.curCoalEnergy-D.lastCoalEnergy)/D.lastCoalEnergy*100),2) as CHAR(32)),'%') COALS
	FROM
		(
	  	SELECT C.unitname, SUM( CASE WHEN C.season='0' THEN C.total ELSE 0 END) AS lastGroupEnergy, 
		  	SUM( CASE WHEN C.season='1' THEN C.total ELSE 0 END ) AS curGroupEnergy, 
		  	SUM( CASE WHEN C.energyType='1' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastWaterEnergy, 
		  	SUM( CASE WHEN C.energyType='1' and C.season='1' THEN C.dosage ELSE 0 END ) AS curWaterEnergy, 
		  	SUM( CASE WHEN C.energyType='2' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastElectricEnergy, 
		  	SUM( CASE WHEN C.energyType='2' and C.season='1' THEN C.dosage ELSE 0 END ) AS curElectricEnergy, 
		  	SUM( CASE WHEN C.energyType='3' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastGasEnergy, 
		  	SUM( CASE WHEN C.energyType='3' and C.season='1' THEN C.dosage ELSE 0 END ) AS curGasEnergy, 
		  	SUM( CASE WHEN C.energyType='4' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastHotEnergy, 
		  	SUM( CASE WHEN C.energyType='4' and C.season='1' THEN C.dosage ELSE 0 END ) AS curHotEnergy, 
		  	SUM( CASE WHEN C.energyType='5' and C.season='0' THEN C.dosage ELSE 0 END ) AS lastCoalEnergy, 
		  	SUM( CASE WHEN C.energyType='5' and C.season='1' THEN C.dosage ELSE 0 END ) AS curCoalEnergy 
	  	FROM( 
	  		SELECT B.unitid, 
	  			( CASE A.UNITTYPE WHEN '1' THEN ( SELECT FEED_NAME FROM t_emc_unit_feed WHERE id = A.UNITID ) 
	  			WHEN '2' THEN ( SELECT NET_NAME FROM t_emc_unit_net WHERE id = A.UNITID ) 
	  			WHEN '3' THEN ( SELECT STATION_NAME FROM t_emc_unit_station WHERE id = A.UNITID ) 
	  			WHEN '4' THEN ( SELECT LINE_NAME FROM t_emc_unit_line WHERE id = A.UNITID ) 
	  			WHEN '5' THEN ( SELECT ROOM_NAME FROM t_emc_unit_room WHERE id = A.UNITID ) END ) unitname, 
	  			SUM(B.dosage) dosage, SUM(B.total) total, B.energytype, B.season 
	  		FROM ( 
	  			SELECT vu.UNITID, vu.UNITTYPE FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
				<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if> ) 
	  			WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
	  				  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
	  			LEFT JOIN ( 
		  			SELECT h.UNITID AS unitid, SUM(h.DOSAGE) AS dosage, SUM(h.DOSAGE * h.COAL_COEF) AS total, et.type AS energytype, 
		  				( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) season 
		  			FROM ( t_emc_final_data_hour h LEFT JOIN t_emc_energy_type et ON h.TYPEID = et.id ) 
		  			WHERE 1 = 1 <include refid="cur_last_time" /> 
		  			GROUP BY unitid, energytype 
		  		) B 
	  			ON A.UNITID = B.unitid WHERE B.dosage IS NOT NULL 
	  		GROUP BY B.unitid, B.energytype, B.season ) C 
	  	GROUP BY C.unitid
	 ) D
  </select>
  <!-- 查询能源流占比分布图 -->
  <select id="energyFlowPie" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT(CASE type.unittype when '1' then '供热源' when '2' then '一次网' when '3' then '换热站' 
  		   when '4' then '二次线' when '5' then '民户' end) name, round(IFNULL(C.total,0),2) value 
  	FROM ( SELECT '1' unittype FROM DUAL UNION SELECT '2' unittype FROM DUAL UNION SELECT '3' unittype 
  		   FROM DUAL UNION SELECT '4' unittype FROM DUAL UNION SELECT '5' unittype FROM DUAL
  	) type LEFT JOIN (
	  	SELECT A.UNITTYPE, sum(B.total) total 
	  	FROM( 
	  		SELECT vu.UNITID, vu.UNITTYPE 
	  		FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
			<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if>) 
	  		WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
	  			  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
	  		LEFT JOIN ( 
	  			SELECT h.UNITID AS unitid, sum(h.DOSAGE * h.COAL_COEF) AS total, 
	  			( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) season 
	  			FROM t_emc_final_data_hour h 
	  			WHERE 1 = 1 <include refid="cur_time" />
	  			GROUP BY unitid 
	  		) B ON A.UNITID = B.unitid 
	  	WHERE B.total IS NOT NULL 
	  	GROUP BY A.UNITTYPE
	) C on type.unittype = C.UNITTYPE
  </select>
  <!-- 查询能源流趋势对比图 -->
  <select id="energyFlowLine" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT concat('type',A.UNITTYPE) unittype, SUM(B.total) total, B.yeardate 
  	FROM( 
  		SELECT vu.UNITID, vu.UNITTYPE 
  		FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
		<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if>) 
  		WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
  			  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
  		LEFT JOIN ( 
  			SELECT h.UNITID AS unitid, sum(h.DOSAGE * h.COAL_COEF) AS total, DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') AS yeardate 
  			FROM t_emc_final_data_hour h 
  			WHERE 1 = 1 <include refid="cur_time" /> 
  			GROUP BY unitid,yeardate 
  		) B ON A.UNITID = B.unitid 
  	WHERE B.total IS NOT NULL 
  	GROUP BY A.UNITTYPE,B.yeardate
  	ORDER BY B.yeardate asc
  </select>
  <!-- 查询能源流同比 -->
  <select id="energyFlowBar" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT type.unittype, round(IFNULL(C.lastTotal,0),2) last, round(IFNULL(C.curTotal,0),2) cur 
  	FROM( SELECT '1' unittype FROM DUAL UNION SELECT '2' unittype FROM DUAL UNION SELECT '3' unittype FROM DUAL UNION 
  		  SELECT '4' unittype FROM DUAL UNION SELECT '5' unittype FROM DUAL) type 
  	LEFT JOIN (
	  	SELECT A.UNITTYPE, IFNULL(sum(case B.season when '0' then B.total end),0) lastTotal, IFNULL(sum(case B.season when '1' then B.total end),0) curTotal 
	  	FROM( SELECT vu.UNITID, vu.UNITTYPE FROM ( t_emc_org LEFT JOIN v_emc_unit vu ON ID = vu.ORGID 
		<if test="toolFeedType!=null and toolFeedType!=''"> AND vu.heat_type = #{toolFeedType,jdbcType=VARCHAR} </if>) 
	  	WHERE FIND_IN_SET( ID, emc_func_org_getchilds (<if test="toolOrgId!=null and toolOrgId!=''">#{toolOrgId,jdbcType=VARCHAR}</if>) ) 
	  		  AND P_ORG_ID != '0' AND UNITID IS NOT NULL ) A 
	  	LEFT JOIN ( 
	  		SELECT h.UNITID AS unitid, sum(h.DOSAGE * h.COAL_COEF) AS total, 
	  		( CASE WHEN DATE_FORMAT(h.DOSAGE_TIME, '%Y-%m-%d') <include refid="between_and" /> THEN '1' ELSE '0' END ) season 
	  		FROM t_emc_final_data_hour h 
	  		WHERE 1 = 1 <include refid="cur_last_time" />
	  		GROUP BY unitid 
	  	) B ON A.UNITID = B.unitid 
	  	WHERE B.total IS NOT NULL 
	  	GROUP BY A.UNITTYPE
	) C ON type.unittype = C.UNITTYPE
	ORDER BY type.unittype
  </select>
  <!-- 能耗子页面，能耗曲线，能源流相关数据查询结束 -->
  
  <delete id="delete" parameterType="java.lang.String" >
    delete from t_emc_final_data_hour
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insertByPrimaryKeySelective" parameterType="com.huak.home.model.EnergyMonitor" >
    insert into t_emc_final_data_hour (ID, COMID, UNITID, 
      NODEID, TYPEID, DOSAGE_TIME, 
      DOSAGE, AREA, PRICE, 
      WTEMP, CWTEMP, COAL_COEF, 
      C_COEF, ITEMP, CITEMP)
    values (#{id,jdbcType=VARCHAR}, #{comid,jdbcType=VARCHAR}, #{unitid,jdbcType=VARCHAR}, 
      #{nodeid,jdbcType=VARCHAR}, #{typeid,jdbcType=VARCHAR}, #{dosageTime,jdbcType=VARCHAR}, 
      #{dosage,jdbcType=DOUBLE}, #{area,jdbcType=DOUBLE}, #{price,jdbcType=DECIMAL}, 
      #{wtemp,jdbcType=DOUBLE}, #{cwtemp,jdbcType=DOUBLE}, #{coalCoef,jdbcType=DOUBLE}, 
      #{cCoef,jdbcType=DOUBLE}, #{itemp,jdbcType=DOUBLE}, #{citemp,jdbcType=DOUBLE})
  </insert>
  <insert id="insert" parameterType="com.huak.home.model.EnergyMonitor" >
    insert into t_emc_final_data_hour
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="comid != null" >
        COMID,
      </if>
      <if test="unitid != null" >
        UNITID,
      </if>
      <if test="nodeid != null" >
        NODEID,
      </if>
      <if test="typeid != null" >
        TYPEID,
      </if>
      <if test="dosageTime != null" >
        DOSAGE_TIME,
      </if>
      <if test="dosage != null" >
        DOSAGE,
      </if>
      <if test="area != null" >
        AREA,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="wtemp != null" >
        WTEMP,
      </if>
      <if test="cwtemp != null" >
        CWTEMP,
      </if>
      <if test="coalCoef != null" >
        COAL_COEF,
      </if>
      <if test="cCoef != null" >
        C_COEF,
      </if>
      <if test="itemp != null" >
        ITEMP,
      </if>
      <if test="citemp != null" >
        CITEMP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="comid != null" >
        #{comid,jdbcType=VARCHAR},
      </if>
      <if test="unitid != null" >
        #{unitid,jdbcType=VARCHAR},
      </if>
      <if test="nodeid != null" >
        #{nodeid,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=VARCHAR},
      </if>
      <if test="dosageTime != null" >
        #{dosageTime,jdbcType=VARCHAR},
      </if>
      <if test="dosage != null" >
        #{dosage,jdbcType=DOUBLE},
      </if>
      <if test="area != null" >
        #{area,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="wtemp != null" >
        #{wtemp,jdbcType=DOUBLE},
      </if>
      <if test="cwtemp != null" >
        #{cwtemp,jdbcType=DOUBLE},
      </if>
      <if test="coalCoef != null" >
        #{coalCoef,jdbcType=DOUBLE},
      </if>
      <if test="cCoef != null" >
        #{cCoef,jdbcType=DOUBLE},
      </if>
      <if test="itemp != null" >
        #{itemp,jdbcType=DOUBLE},
      </if>
      <if test="citemp != null" >
        #{citemp,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.huak.home.model.EnergyMonitor" >
    update t_emc_final_data_hour
    <set >
      <if test="comid != null" >
        COMID = #{comid,jdbcType=VARCHAR},
      </if>
      <if test="unitid != null" >
        UNITID = #{unitid,jdbcType=VARCHAR},
      </if>
      <if test="nodeid != null" >
        NODEID = #{nodeid,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        TYPEID = #{typeid,jdbcType=VARCHAR},
      </if>
      <if test="dosageTime != null" >
        DOSAGE_TIME = #{dosageTime,jdbcType=VARCHAR},
      </if>
      <if test="dosage != null" >
        DOSAGE = #{dosage,jdbcType=DOUBLE},
      </if>
      <if test="area != null" >
        AREA = #{area,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="wtemp != null" >
        WTEMP = #{wtemp,jdbcType=DOUBLE},
      </if>
      <if test="cwtemp != null" >
        CWTEMP = #{cwtemp,jdbcType=DOUBLE},
      </if>
      <if test="coalCoef != null" >
        COAL_COEF = #{coalCoef,jdbcType=DOUBLE},
      </if>
      <if test="cCoef != null" >
        C_COEF = #{cCoef,jdbcType=DOUBLE},
      </if>
      <if test="itemp != null" >
        ITEMP = #{itemp,jdbcType=DOUBLE},
      </if>
      <if test="citemp != null" >
        CITEMP = #{citemp,jdbcType=DOUBLE},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huak.home.model.EnergyMonitor" >
    update t_emc_final_data_hour
    set COMID = #{comid,jdbcType=VARCHAR},
      UNITID = #{unitid,jdbcType=VARCHAR},
      NODEID = #{nodeid,jdbcType=VARCHAR},
      TYPEID = #{typeid,jdbcType=VARCHAR},
      DOSAGE_TIME = #{dosageTime,jdbcType=VARCHAR},
      DOSAGE = #{dosage,jdbcType=DOUBLE},
      AREA = #{area,jdbcType=DOUBLE},
      PRICE = #{price,jdbcType=DECIMAL},
      WTEMP = #{wtemp,jdbcType=DOUBLE},
      CWTEMP = #{cwtemp,jdbcType=DOUBLE},
      COAL_COEF = #{coalCoef,jdbcType=DOUBLE},
      C_COEF = #{cCoef,jdbcType=DOUBLE},
      ITEMP = #{itemp,jdbcType=DOUBLE},
      CITEMP = #{citemp,jdbcType=DOUBLE}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>